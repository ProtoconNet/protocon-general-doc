# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Protocon Network
# This file is distributed under the same license as the Protocon Network
# Document package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Protocon Network Document \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-20 14:18+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../docs/api/builder.rst:3
msgid "Using Operation Builder"
msgstr "Operation Builder 사용하기"

#: ../../docs/api/builder.rst:5
msgid ""
"**Digest API** has **Operation Builder** to help write operation "
"messages. **Operation Builder** makes it possible to generate operation "
"messages through api without using SDK."
msgstr ""
"**Digest API**는 operation message 작성을 도와주는 **Operation Builder**를 가지고 "
"있습니다. **Operation Builder**는 SDK를 사용하지 않고 api를 통해 "
"operation message 생성을 가능하게 합니다."

#: ../../docs/api/builder.rst:9
msgid "Get Operation Fact Template"
msgstr "Operation Fact 템플릿 얻기"

#: ../../docs/api/builder.rst:11
msgid ""
"By requesting an *Operation Fact Template*, you can receive a template "
"for each operation type. You can create a fact message by changing the "
"field value of the template."
msgstr ""
"*Operation Fact 템플릿*을 요청하여 각 operation 타입에 대한 "
"템플릿을 얻을 수 있습니다. 템플릿의 각 필드값을 변경하여 fact 메시지를 "
"생성할 수 있습니다."

#: ../../docs/api/builder.rst:14 ../../docs/api/builder.rst:124
#: ../../docs/api/builder.rst:210 ../../docs/api/builder.rst:331
#: ../../docs/api/builder.rst:461 ../../docs/api/intro.rst:23
msgid "METHOD"
msgstr "METHOD"

#: ../../docs/api/builder.rst:14 ../../docs/api/builder.rst:461
#: ../../docs/api/intro.rst:25 ../../docs/api/intro.rst:27
#: ../../docs/api/intro.rst:29 ../../docs/api/intro.rst:31
#: ../../docs/api/intro.rst:33 ../../docs/api/intro.rst:35
#: ../../docs/api/intro.rst:37 ../../docs/api/intro.rst:39
#: ../../docs/api/intro.rst:41 ../../docs/api/intro.rst:43
#: ../../docs/api/intro.rst:45 ../../docs/api/intro.rst:47
#: ../../docs/api/intro.rst:49 ../../docs/api/intro.rst:51
#: ../../docs/api/intro.rst:59 ../../docs/api/intro.rst:61
msgid "GET"
msgstr "GET"

#: ../../docs/api/builder.rst:16 ../../docs/api/builder.rst:126
#: ../../docs/api/builder.rst:212 ../../docs/api/builder.rst:333
#: ../../docs/api/builder.rst:463
msgid "PATH"
msgstr "PATH"

#: ../../docs/api/builder.rst:16
msgid "/builder/operation/fact/template/{fact_type}"
msgstr "/builder/operation/fact/template/{fact_type}"

#: ../../docs/api/builder.rst:19 ../../docs/api/builder.rst:129
#: ../../docs/api/builder.rst:262 ../../docs/api/builder.rst:384
#: ../../docs/api/builder.rst:478
msgid "**RESPONSE EXAMPLE**"
msgstr "**RESPONSE 예시**"

#: ../../docs/api/builder.rst:72
msgid ""
"The ``_embedded`` object among the contents of the template responded "
"represents the *fact*. Edit the contents of the fact json object and use "
"it in *Build Operation Message*."
msgstr ""
"템플릿 응답 내용 중 ``_embedded`` 객체는 "
"*fact*를 나타냅니다. fact json object의 내용을 편집하여 "
"*Operation Message 빌드*에서 사용하십시오."

#: ../../docs/api/builder.rst:74
msgid "**create-accounts FACT EXAMPLE**"
msgstr "**create-accounts FACT 예시**"

#: ../../docs/api/builder.rst:109
msgid ""
"The ``hash`` value is automatically completed by the builder. You don’t "
"have to edit it."
msgstr ""
"``hash`` 값은 builder에 의해 자동으로 완성됩니다. 직접 "
"편집할 필요가 없습니다."

#: ../../docs/api/builder.rst:110
msgid "``token`` is a *base64* encoded value."
msgstr "``token``은 *base64*로 인코딩된 값입니다."

#: ../../docs/api/builder.rst:111
msgid "Use the ``_hint`` item as it is."
msgstr "``_ hint`` 값은 그대로 사용하십시오."

#: ../../docs/api/builder.rst:113
msgid ""
"Check `Key Command <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/cli/key.html>`_ for the details of key "
"registration of accounts related to ``keys``."
msgstr ""
"``keys``와 관련된 계정의 키 등록에 대한 자세한 내용은 `Key Command <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/cli/key.html>`_를 "
"참조하십시오."

#: ../../docs/api/builder.rst:117
msgid "Build Operation Message"
msgstr "Operation Message 빌드"

#: ../../docs/api/builder.rst:119
msgid ""
"The created fact message is sent to the request body in json format and "
"the completed fact message is received."
msgstr ""
"생성한 fact message는 json 포맷으로 request body를 통해 전송되며 "
"완성된 fact message를 돌려받습니다."

#: ../../docs/api/builder.rst:121
msgid ""
"In the case of the example, you will receive a fact message with the "
"``keys hash``, ``token``, and ``fact hash`` changed."
msgstr ""
"예시의 경우, ``keys hash``, ``token``, ``fact hash``가 변경된 "
"fact message를 돌려받습니다."

#: ../../docs/api/builder.rst:124 ../../docs/api/builder.rst:210
#: ../../docs/api/builder.rst:331
msgid "POST"
msgstr "POST"

#: ../../docs/api/builder.rst:126 ../../docs/api/intro.rst:53
msgid "/builder/operation/fact"
msgstr "/builder/operation/fact"

#: ../../docs/api/builder.rst:193
msgid ""
"Check the ``fact.hash`` value of the response data. ``fact.hash`` value "
"is used as data to complete the value of the fact_sign object."
msgstr ""
"응답 값 중 ``fact.hash``를 확인하십시오. ``fact.hash``는 "
"fact_sign 객체의 값을 완성하기 위해 사용됩니다."

#: ../../docs/api/builder.rst:195
msgid "In a *fact_sign* in ``fact_signs``,"
msgstr "``fact_signs`` 중 *fact_sign*에서,"

#: ../../docs/api/builder.rst:197
msgid ""
"The ``signer`` is the *publickey* of the keypair used to create the "
"signature."
msgstr "``signer``는 signature를 생성하기 위해 사용되는 keypair의 *public key*입니다."

#: ../../docs/api/builder.rst:198
msgid "The ``signature`` is generated by the ``signer``."
msgstr "``signature``는 ``signer``에 의해 생성됩니다."

#: ../../docs/api/builder.rst:199
msgid "``signed_at`` is the datetime at which the signature was generated."
msgstr "``signed_at``은 signature가 생성된 datetime입니다."

#: ../../docs/api/builder.rst:203
msgid "Sign Operation Message"
msgstr "Operation Message에 서명하기"

#: ../../docs/api/builder.rst:205
msgid ""
"A *signature* is created using the ``hash`` of the received *fact* then "
"the *fact_sign* for it is added."
msgstr "*signature*는 수신한 *fact*의 ``hash``를 사용하여 만들며 이에 대한 "
"*fact_sign*이 새로 추가됩니다."

#: ../../docs/api/builder.rst:207
msgid ""
"When the generated fact message is sent to the request body in json "
"format, the completed operation message with the *operation hash* added "
"is received."
msgstr ""
"생성된 fact message를 json 포맷으로 request body로 전달하면 "
"*operation hash*가 추가된 완성된 operation message를 "
"돌려받습니다."

#: ../../docs/api/builder.rst:212 ../../docs/api/intro.rst:55
msgid "/builder/operation/sign"
msgstr "/builder/operation/sign"

#: ../../docs/api/builder.rst:215 ../../docs/api/builder.rst:336
msgid "**REQUEST BODY EXAMPLE**"
msgstr "**REQUEST BODY 예시**"

#: ../../docs/api/builder.rst:321
msgid "Broadcast Message to Network"
msgstr "Network로 Message 브로드캐스팅"

#: ../../docs/api/builder.rst:323
msgid ""
"By requesting an *Operation* or *Seal* message as the request body, you "
"can broadcast it to the network."
msgstr ""
"*Operation* 혹은 *Seal* message를 request body로 전달해 "
"네트워크로 이를 브로드캐스트 할 수 있습니다."

#: ../../docs/api/builder.rst:325
msgid "In this case, the *signer* of the seal becomes the digest node."
msgstr "이 경우, seal의 *signer*는 digest node가 됩니다."

#: ../../docs/api/builder.rst:327
msgid ""
"If the request body is **operation**, a new seal is created and the "
"digest node signs."
msgstr ""
"만약 request body가 **operation**이면, 새로운 seal이 생성되며 "
"digest node가 서명합니다."

#: ../../docs/api/builder.rst:328
msgid "If the request body is a **seal**, the seal is signed by the digest node."
msgstr "만약 request body가 **seal**이면, seal이 digest node로 서명됩니다."

#: ../../docs/api/builder.rst:333 ../../docs/api/intro.rst:57
msgid "/builder/send"
msgstr "/builder/send"

#: ../../docs/api/builder.rst:456
msgid "Confirming the Success of the Operation"
msgstr "Operation 성공 확인"

#: ../../docs/api/builder.rst:458
msgid ""
"Whether the operation is successfully processed can be checked by "
"querying the operation with the *fact hash* value in the api."
msgstr ""
"operation의 성공 여부는 api에서 "
"*fact hash*로 operation을 요청하여 확인할 수 있습니다."

#: ../../docs/api/builder.rst:463
msgid "/block/operation/{operation_fact_hash}"
msgstr "/block/operation/{operation_fact_hash}"

#: ../../docs/api/builder.rst:466
msgid ""
"If ``_embedded.in_state`` is true in the response message, the operation "
"is saved in the block."
msgstr ""
"응답 메시지에서 ``_embedded.in_state``가 true인 경우, operation은 "
"block에 저장됩니다."

#: ../../docs/api/builder.rst:467
msgid ""
"If ``_embedded.in_state`` is false, the operation was not saved in the "
"block."
msgstr ""
"응답 메시지에서 ``_embedded.in_state``가 false, operation은 "
"블록에 저장되지 않습니다."

#: ../../docs/api/builder.rst:469
msgid "If **the operation fails**, the reason may be as follows."
msgstr "operation이 **실패**한 경우, 실패 이유는 다음 중에서 찾아볼 수 있습니다."

#: ../../docs/api/builder.rst:471
msgid "*insufficient balance of sender* when sending money"
msgstr "토큰 전송 시 *sender의 충분하지 않은 잔액*"

#: ../../docs/api/builder.rst:472
msgid "*incorrect signature*"
msgstr "*정확하지 않은 서명*"

#: ../../docs/api/builder.rst:473
msgid "*creation-account amount less than new-account-min-balance*"
msgstr "*create-account의 amount가 new-account-min-balance보다 적을 경우"

#: ../../docs/api/builder.rst:474 ../../docs/model/intro.rst:27
msgid "etc..."
msgstr "그 외..."

#: ../../docs/api/builder.rst:476
msgid ""
"You can check the reason for failure in ``_embedded.reason.msg`` in the "
"response message."
msgstr "응답 메시지의 ``_embedded.reason.msg``에서 실패 이유를 확인할 수 있습니다."

#: ../../docs/api/intro.rst:3
msgid "REST API"
msgstr "REST API"

#: ../../docs/api/intro.rst:5
msgid "**Digest API** is a service that allows nodes to search blockchain data."
msgstr "**Digest API**는 노드가 블록체인 데이터를 검색할 수 있도록 해주는 서비스입니다."

#: ../../docs/api/intro.rst:6
msgid "It can be used in applications such as wallet and blockchain explorer."
msgstr "이것은 지갑이나 블록체인 탐색기와 같은 응용프로그램에 사용될 수 있습니다."

#: ../../docs/api/intro.rst:8
msgid "API is provided through *HTTP/2 network protocol*."
msgstr "API는 *HTTP/2 network protocol*를 사용해 제공됩니다."

#: ../../docs/api/intro.rst:9
msgid ""
"Response message follows `HAL <https://datatracker.ietf.org/doc/html"
"/draft-kelly-json-hal-08>`_ and is delivered in *JSON* format."
msgstr ""
"응답 메시지는 *JSON* 포멧으로 전달되며 `HAL <https://datatracker.ietf.org/doc/html"
"/draft-kelly-json-hal-08>`_를 준수합니다."

#: ../../docs/api/intro.rst:10
msgid ""
"API data storage can be set in `Configuration <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/run/config.html>`_ of Mitum Currency."
msgstr ""
"API data storage는 Mitum Currency의 `Configuration <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/run/config.html>`에 의하여 설정됩니다."

#: ../../docs/api/intro.rst:11
msgid "Mitum's main storage can be used, or a separate database is also possible."
msgstr "Mitum의 main storage가 사용되거나, 분리된 database가 사용될 수 있습니다."

#: ../../docs/api/intro.rst:12
msgid ""
"*TLS certificates* required for *HTTP/2* will randomly generate self "
"signed certificates if the service host is localhost unless the path of "
"the file is set separately."
msgstr ""
"*HTTP/2*를 위한 *TLS certificates*는 만약 service host가 "
"localhost이거나 file path가 따로 설정되지 않은 경우 "
"무작위로 self signed certificates 을 생성합니다."

#: ../../docs/api/intro.rst:14
msgid ""
"If an operation is not included in the block due to a specific problem, "
"the cause can be checked through the response."
msgstr ""
"어떤 문제로 인해 operation이 블록에 추가되지 않은 경우, "
"응답을 통해 원인을 확인할 수 있습니다."

#: ../../docs/api/intro.rst:18 ../../docs/cli/intro.rst:23
msgid "Summary"
msgstr "요약"

#: ../../docs/api/intro.rst:20
msgid "This is the summary of REST API for Mitum Currency."
msgstr "Mitum Currency의 REST API에 대한 요약입니다."

#: ../../docs/api/intro.rst:23
msgid "REQUEST URL"
msgstr "REQUEST URL"

#: ../../docs/api/intro.rst:23
msgid "RESPONSE"
msgstr "RESPONSE"

#: ../../docs/api/intro.rst:25
msgid "/"
msgstr "/"

#: ../../docs/api/intro.rst:25
msgid "Node information"
msgstr "Node information"

#: ../../docs/api/intro.rst:27
msgid "/block/manifests"
msgstr "/block/manifests"

#: ../../docs/api/intro.rst:27
msgid "All block manifests"
msgstr "모든 block manifests"

#: ../../docs/api/intro.rst:29
msgid "/block/{height}"
msgstr "/block/{height}"

#: ../../docs/api/intro.rst:29
msgid "Block by block height"
msgstr "특정 block height의 block"

#: ../../docs/api/intro.rst:31
msgid "/block/{height}/manifest"
msgstr "/block/{height}/manifest"

#: ../../docs/api/intro.rst:31
msgid "Block manifest by block height"
msgstr "특정 block height의 block manifest"

#: ../../docs/api/intro.rst:33
msgid "/block/{height}/operations"
msgstr "/block/{height}/operations"

#: ../../docs/api/intro.rst:33
msgid "All operations of block"
msgstr "block의 모든 operation"

#: ../../docs/api/intro.rst:35
msgid "/block/{block_hash}"
msgstr "/block/{block_hash}"

#: ../../docs/api/intro.rst:35
msgid "Block by block hash"
msgstr "특정 block hash의 block"

#: ../../docs/api/intro.rst:37
msgid "/block/{block_hash}/manifest"
msgstr "/block/{block_hash}/manifest"

#: ../../docs/api/intro.rst:37
msgid "Block manifest by block hash"
msgstr "특정 block hash의 block manifest"

#: ../../docs/api/intro.rst:39
msgid "/block/operations"
msgstr "/block/operations"

#: ../../docs/api/intro.rst:39
msgid "All operations"
msgstr "모든 operation"

#: ../../docs/api/intro.rst:41
msgid "/block/operation/{fact_hash}"
msgstr "/block/operation/{fact_hash}"

#: ../../docs/api/intro.rst:41
msgid "Operation by fact hash"
msgstr "특정 fact hash의 operation"

#: ../../docs/api/intro.rst:43
msgid "/account/{address}"
msgstr "/account/{address}"

#: ../../docs/api/intro.rst:43
msgid "Latest state of account"
msgstr "계정의 최신 상태"

#: ../../docs/api/intro.rst:45
msgid "/account/{address}/operations"
msgstr "/account/{address}/operations"

#: ../../docs/api/intro.rst:45
msgid "Operations related to account"
msgstr "계정과 관련된 operation"

#: ../../docs/api/intro.rst:47
msgid "/accounts?publickey={public_key}"
msgstr "/accounts?publickey={public_key}"

#: ../../docs/api/intro.rst:47
msgid "Accounts related to public key"
msgstr "public key와 관련된 계정들"

#: ../../docs/api/intro.rst:49
msgid "/builder/operation"
msgstr "/builder/operation"

#: ../../docs/api/intro.rst:49
msgid "Available Operation types"
msgstr "지원되는 operation type"

#: ../../docs/api/intro.rst:51
msgid "/builder/operation/fact/template/{fact}"
msgstr "/builder/operation/fact/template/{fact}"

#: ../../docs/api/intro.rst:51
msgid "Fact template"
msgstr "fact 템플릿"

#: ../../docs/api/intro.rst:53
msgid "POST {fact}"
msgstr "POST {fact}"

#: ../../docs/api/intro.rst:53
msgid "Operation message from fact"
msgstr "fact로 생성한 operation message"

#: ../../docs/api/intro.rst:55
msgid "POST {operation}"
msgstr "POST {operation}"

#: ../../docs/api/intro.rst:55
msgid "Operation with hash from operation"
msgstr "새로운 hash가 포함된 operation"

#: ../../docs/api/intro.rst:57
msgid "POST {operation/seal}"
msgstr "POST {operation/seal}"

#: ../../docs/api/intro.rst:57
msgid "Broadcast seal"
msgstr "seal 브로드캐스팅"

#: ../../docs/api/intro.rst:59
msgid "/currency"
msgstr "/currency"

#: ../../docs/api/intro.rst:59
msgid "All currencies"
msgstr "모든 currency"

#: ../../docs/api/intro.rst:61
msgid "/currency/{currency_id}"
msgstr "/currency/{currency_id}""

#: ../../docs/api/intro.rst:61
msgid "Currency by currency id"
msgstr "currency id에 대한 currency 정보"

#: ../../docs/api/intro.rst:64
msgid ""
"If necessary, refer to `Mitum Currency Digest API Docs "
"<https://rapidoc.test.protocon.network/>`_ for details."
msgstr ""
"필요한 경우, 자세한 내용을 위해 `Mitum Currency Digest API Docs "
"<https://rapidoc.test.protocon.network/>`_를 참고하세요."

#: ../../docs/api/intro.rst:66
msgid ""
"This document doesn't provide any information of APIs for Mitum "
"Blocksign. See `Mitum Blocksign Digest API Docs "
"<https://rapidoc.blocksign.protocon.network>`_ for Mitum Blocksign."
msgstr ""
"이 문서는 Mitum Blocksign의 API에 대해 설명하고 있지 않습니다. "
"Mitum Blocksign의 경우 `Mitum Blocksign Digest API Docs "
"<https://rapidoc.blocksign.protocon.network>`_를 참고하세요."

#: ../../docs/api/rapi.rst:3
msgid "API List"
msgstr "API List"

#: ../../docs/api/rapi.rst:5
msgid "This is the page of the explanation for each API Path."
msgstr "이 페이지는 각 API 경로에 대한 설명을 위한 페이지입니다."

#: ../../docs/api/rapi.rst:7
msgid ""
"For details, visit `Mitum Currency Digest API Docs "
"<https://rapidoc.test.protocon.network/>`_."
msgstr ""
"자세한 내용은 `Mitum Currency Digest API Docs "
"<https://rapidoc.test.protocon.network/>`_를 참고하세요."

#: ../../docs/appendix/timestamp.rst:3
msgid "About Time Stamp"
msgstr "Time Stamp"

#: ../../docs/appendix/timestamp.rst:6
msgid "Expression of Time Stamp"
msgstr "Time Stamp의 표현"

#: ../../docs/appendix/timestamp.rst:8
msgid ""
"For blocks, seals, signatures and etc, mitum uses ``yyyy-MM-dd HH:mm:ss.*"
" +0000 UTC`` expression and ``yyyy-MM-ddTHH:mm:ss.*Z`` as standard."
msgstr ""
"block, seal, signature 등, mitum은 ``yyyy-MM-dd HH:mm:ss.*"
" +0000 UTC``와 ``yyyy-MM-ddTHH:mm:ss.*Z``와 같은 표현을 표준으로 사용합니다."

#: ../../docs/appendix/timestamp.rst:9
msgid ""
"All other timezones are not allowed! You must use only ``+0000 timezone``"
" for mitum."
msgstr ""
"모든 다른 timezone은 허용되지 않습니다! 반드시 ``+0000 timezone``을 사용해주세요."

#: ../../docs/appendix/timestamp.rst:11 ../../docs/appendix/timestamp.rst:33
#: ../../docs/cli/seal.rst:1010 ../../docs/model/currency.rst:74
#: ../../docs/run/config.rst:33 ../../docs/run/config.rst:63
#: ../../docs/run/config.rst:139 ../../docs/run/config.rst:149
#: ../../docs/run/config.rst:164 ../../docs/run/config.rst:176
#: ../../docs/run/config.rst:191 ../../docs/run/run.rst:107
#: ../../docs/sdk/java.rst:312 ../../docs/sdk/js.rst:321
#: ../../docs/sdk/python.rst:300
msgid "For example,"
msgstr "예를 들어,"

#: ../../docs/appendix/timestamp.rst:13
msgid ""
"When converting timestamp to byte format for generating "
"block/seal/fact_sign hash"
msgstr ""
"block/seal/fact_sign hash 등을 위해 timestamp를 byte format으로 바꿀 때"

#: ../../docs/appendix/timestamp.rst:14
msgid "``convert the string 2021-11-16 01:53:30.518 +0000 UTC to bytes format``"
msgstr "``string 2021-11-16 01:53:30.518 +0000 UTC을 byte format으로 변환``"

#: ../../docs/appendix/timestamp.rst:16
msgid "When putting timestamp in block, seal, fact_sign or etc"
msgstr "block, seal, fact_sign 등에 timestamp를 추가할 때"

#: ../../docs/appendix/timestamp.rst:17
msgid "``convert the timestamp to 2021-11-16T01:53:30.518Z and put it in json``"
msgstr "``timestamp를 2021-11-16T01:53:30.518Z 형태로 변환 후 json에 추가``"

#: ../../docs/appendix/timestamp.rst:19
msgid ""
"To generate operation hash, mitum concatenates byte arrays of network id,"
" fact hash and byte arrays of fact_signs."
msgstr ""
"operation hash를 생성하기 위해, mitum은 network id, fact hash가 변환된 byte array와 "
"fact_signs의 byte array를 이어붙입니다."

#: ../../docs/appendix/timestamp.rst:20
msgid ""
"And to generate the byte array of a fact_sign, mitum concatenates byte "
"arrays of signer, signature digest and signed_at."
msgstr ""
"And to generate the byte array of a fact_sign, mitum concatenates byte "
"arrays of signer, signature digest and signed_at."

#: ../../docs/appendix/timestamp.rst:22
msgid ""
"Be careful that the format of signed_at when converted to bytes is like "
"``yyyy-MM-dd HH:mm:ss.* +0000 UTC`` but it will be expressed as ``yyyy-"
"MM-ddTHH:mm:ss.*Z`` when putted in json."
msgstr ""

#: ../../docs/appendix/timestamp.rst:25
msgid "How many decimal places to be expressed?"
msgstr ""

#: ../../docs/appendix/timestamp.rst:27
msgid "There is one more thing to note."
msgstr ""

#: ../../docs/appendix/timestamp.rst:29
msgid ""
"First at all, you don't have to care about decimal points of second(ss.*)"
" in timestamp."
msgstr ""

#: ../../docs/appendix/timestamp.rst:30
msgid "Moreover, you can write timestamp without . and any number under .."
msgstr ""

#: ../../docs/appendix/timestamp.rst:31
msgid ""
"However, you should not put any unnecessary zeros(0) in the float "
"expression of second(ss.*) when converting timestamp to bytes format."
msgstr ""

#: ../../docs/appendix/timestamp.rst:35
msgid ""
"``2021-11-16T01:53:30.518Z`` is converted to ``2021-11-16 01:53:30.518 "
"+0000 UTC`` without any change of the time itself."
msgstr ""

#: ../../docs/appendix/timestamp.rst:36
msgid ""
"``2021-11-16T01:53:30.510Z`` must be converted to ``2021-11-16 "
"01:53:30.51 +0000 UTC`` when generating hash."
msgstr ""

#: ../../docs/appendix/timestamp.rst:37
msgid ""
"``2021-11-16T01:53:30.000Z`` must be converted to ``2021-11-16T01:53:30 "
"+0000 UTC`` when generating hash."
msgstr ""

#: ../../docs/appendix/timestamp.rst:39
msgid ""
"Any timestamp with some unnecessary zeros putted in json doesn't affect "
"to effectiveness of the block, seal, or operation."
msgstr ""

#: ../../docs/appendix/timestamp.rst:41
msgid "Just pay attention when convert the format."
msgstr ""

#: ../../docs/bc/mitum.rst:3
msgid "Mitum Protocol"
msgstr ""

#: ../../docs/bc/mitum.rst:7
msgid "What is MITUM?"
msgstr ""

#: ../../docs/bc/mitum.rst:9
msgid "**Mitum** is a general privacy blockchain with flexible and resilient way."
msgstr ""

#: ../../docs/bc/mitum.rst:11
msgid "Mitum can be used for various kind of purposes."
msgstr ""

#: ../../docs/bc/mitum.rst:13
msgid "public and private blockchain like cryptocurrency network"
msgstr ""

#: ../../docs/bc/mitum.rst:14
msgid "data-centric blockchain for arbitrary data"
msgstr ""

#: ../../docs/bc/mitum.rst:15
msgid "secure anonymity voting system"
msgstr ""

#: ../../docs/bc/mitum.rst:17
msgid ""
"If you want to know more about **MITUM**, visit `Mitum Document <https"
"://mitum-doc.readthedocs.io/en/proto2/index.html>`_."
msgstr ""

#: ../../docs/bc/mitum.rst:21
msgid "Mitum Technical SPEC"
msgstr ""

#: ../../docs/bc/mitum.rst:23
msgid ""
"Mitum (blockchain core framework) uses *ISAAC+ consensus protocol* based "
"on *PBFT*."
msgstr ""

#: ../../docs/bc/mitum.rst:24
msgid ""
"The network transport protocol is `quic "
"<https://en.wikipedia.org/wiki/QUIC>`_ (based on udp)."
msgstr ""

#: ../../docs/bc/mitum.rst:25
msgid "*Gossip-Based* Node Discovery Protocol."
msgstr ""

#: ../../docs/bc/mitum.rst:26
msgid ""
"The main storage engine of the blockchain uses *MongoDB* and the local "
"file system is used for block storage."
msgstr ""

#: ../../docs/bc/mitum.rst:27
msgid "Parallel operation processing"
msgstr ""

#: ../../docs/bc/mitum.rst:28
msgid "Main hash algorithm: `Keccak <https://keccak.team>`_ 256, SHA-3"
msgstr ""

#: ../../docs/bc/mitum.rst:29
msgid ""
"Supports multiple hash algorithm: ``Keccak 256``, ``Keccak 512``, ``Raw "
"bytes.``"
msgstr ""

#: ../../docs/bc/mitum.rst:30
msgid "Supports multiple message serialization format: *JSON*, *BSON*"
msgstr ""

#: ../../docs/bc/mitum.rst:31
msgid "Small amount of code."
msgstr ""

#: ../../docs/bc/mitum.rst:32
msgid "*JSON logging*"
msgstr ""

#: ../../docs/cli/deploy.rst:3
msgid "Deploy Command"
msgstr ""

#: ../../docs/cli/deploy.rst:5
msgid "Execute ``deploy key`` command to create and manage the node’s deploy key."
msgstr ""

#: ../../docs/cli/deploy.rst:7
msgid "The subcommands related to ``deploy key`` command are as follows."
msgstr ""

#: ../../docs/cli/deploy.rst:9 ../../docs/cli/key.rst:9
msgid "``new``"
msgstr ""

#: ../../docs/cli/deploy.rst:10
msgid "``keys``"
msgstr ""

#: ../../docs/cli/deploy.rst:11 ../../docs/cli/intro.rst:11
msgid "``key``"
msgstr ""

#: ../../docs/cli/deploy.rst:12
msgid "``revoke``"
msgstr ""

#: ../../docs/cli/deploy.rst:16
msgid "**What is deploy key?**"
msgstr ""

#: ../../docs/cli/deploy.rst:18
msgid ""
"Updates of nodes (such as changing the BlockDataMap) should be allowed "
"only by the node owner. The node owner uses the key to prove himself when"
" managing the node."
msgstr ""

#: ../../docs/cli/deploy.rst:21
msgid ""
"However, it is dangerous to directly use a node’s private key for node "
"management. So we need a **replaceable and manageable key that can be "
"used for things like node management**."
msgstr ""

#: ../../docs/cli/deploy.rst:24
msgid "``deploy key`` is used for this purpose."
msgstr ""

#: ../../docs/cli/deploy.rst:28 ../../docs/cli/key.rst:22
msgid "new"
msgstr ""

#: ../../docs/cli/deploy.rst:30
msgid "By ``new`` command, create and register new deploy key to the node."
msgstr ""

#: ../../docs/cli/deploy.rst:36 ../../docs/cli/deploy.rst:60
#: ../../docs/cli/deploy.rst:83 ../../docs/cli/deploy.rst:108
#: ../../docs/cli/etc.rst:18 ../../docs/cli/etc.rst:35
#: ../../docs/cli/key.rst:35 ../../docs/cli/key.rst:53
#: ../../docs/cli/key.rst:74 ../../docs/cli/key.rst:155
#: ../../docs/cli/node.rst:60 ../../docs/cli/seal.rst:40
#: ../../docs/cli/seal.rst:390 ../../docs/cli/seal.rst:473
#: ../../docs/cli/seal.rst:602 ../../docs/cli/seal.rst:754
#: ../../docs/cli/seal.rst:868 ../../docs/cli/seal.rst:919
#: ../../docs/cli/seal.rst:1006 ../../docs/cli/seal.rst:1144
#: ../../docs/cli/storage.rst:27 ../../docs/cli/storage.rst:62
#: ../../docs/cli/storage.rst:133 ../../docs/cli/storage.rst:172
#: ../../docs/cli/storage.rst:207 ../../docs/cli/storage.rst:223
#: ../../docs/cli/storage.rst:246
msgid "**EXAMPLE**"
msgstr ""

#: ../../docs/cli/deploy.rst:52 ../../docs/cli/key.rst:81
#: ../../docs/cli/key.rst:106
msgid "keys"
msgstr ""

#: ../../docs/cli/deploy.rst:54
msgid "By ``keys`` command,  get the list of registered deploy keys in the node."
msgstr ""

#: ../../docs/cli/deploy.rst:75
msgid "key"
msgstr ""

#: ../../docs/cli/deploy.rst:77
msgid "By ``key`` command, check the existence of deploy key in the node."
msgstr ""

#: ../../docs/cli/deploy.rst:100
msgid "revoke"
msgstr ""

#: ../../docs/cli/deploy.rst:102
msgid "By ``revoke`` command, revoke deploy key from the node."
msgstr ""

#: ../../docs/cli/etc.rst:3
msgid "Others"
msgstr ""

#: ../../docs/cli/etc.rst:5 ../../docs/cli/intro.rst:9
msgid "``version``"
msgstr ""

#: ../../docs/cli/etc.rst:6 ../../docs/cli/intro.rst:15
msgid "``quic-client``"
msgstr ""

#: ../../docs/cli/etc.rst:10
msgid "version"
msgstr ""

#: ../../docs/cli/etc.rst:12
msgid "Check the version of the installed Mitum Currency by ``version`` command."
msgstr ""

#: ../../docs/cli/etc.rst:27
msgid "quic-client"
msgstr ""

#: ../../docs/cli/etc.rst:29
msgid ""
"Note that the response of ``quic-client`` is same with that when "
"requesting *node info* by API."
msgstr ""

#: ../../docs/cli/intro.rst:3
msgid "Command Line Interface"
msgstr ""

#: ../../docs/cli/intro.rst:5
msgid ""
"In this part, we will introduce you what commands Mitum Currency provides"
" and how to use them."
msgstr ""

#: ../../docs/cli/intro.rst:7
msgid "There are seven major commands it supports,"
msgstr ""

#: ../../docs/cli/intro.rst:10
msgid "``node``"
msgstr ""

#: ../../docs/cli/intro.rst:12
msgid "``seal``"
msgstr ""

#: ../../docs/cli/intro.rst:13
msgid "``storage``"
msgstr ""

#: ../../docs/cli/intro.rst:14
msgid "``deploy``"
msgstr ""

#: ../../docs/cli/intro.rst:17
msgid ""
"You may be familiar with ``node`` command if you have already been to "
"``Run`` page."
msgstr ""

#: ../../docs/cli/intro.rst:19
msgid ""
"It is easy to play ``version`` and ``quic-client``. They are described in"
" ``Others``. Other commands will be explained one by one."
msgstr ""

#: ../../docs/cli/intro.rst:25
msgid "This is the all commands that Mitum Currency provides."
msgstr ""

#: ../../docs/cli/key.rst:3
msgid "Key Command"
msgstr ""

#: ../../docs/cli/key.rst:5
msgid ""
"``key`` command helps create a keypair, get address from keys, and get "
"signature."
msgstr ""

#: ../../docs/cli/key.rst:7
msgid "The subcommands of the ``key`` command are as follows."
msgstr ""

#: ../../docs/cli/key.rst:10
msgid "``address``"
msgstr ""

#: ../../docs/cli/key.rst:11 ../../docs/cli/seal.rst:21
msgid "``sign``"
msgstr ""

#: ../../docs/cli/key.rst:15
msgid "Keypair"
msgstr ""

#: ../../docs/cli/key.rst:17
msgid "*Private key* and *public key* are created through keypair generation."
msgstr ""

#: ../../docs/cli/key.rst:18
msgid ""
"The generated keypair is used to *create an account*, *register a "
"keypair* of a node, and *create a signature* of operation and seal."
msgstr ""

#: ../../docs/cli/key.rst:24
msgid "By ``new`` command, **create a new keypair**."
msgstr ""

#: ../../docs/cli/key.rst:27
msgid "Random Keypair"
msgstr ""

#: ../../docs/cli/key.rst:29
msgid "Create random keypair without any seed."
msgstr ""

#: ../../docs/cli/key.rst:45
msgid "Keypair from Seed"
msgstr ""

#: ../../docs/cli/key.rst:47
msgid ""
"Keypair from seed. The length of string seed must be longer than or equal"
" to 36."
msgstr ""

#: ../../docs/cli/key.rst:64 ../../docs/cli/key.rst:102
#: ../../docs/run/config.rst:9
msgid "address"
msgstr ""

#: ../../docs/cli/key.rst:66
msgid "By ``address`` command, generate address from keys."
msgstr ""

#: ../../docs/cli/key.rst:68
msgid ""
"You should prepare (public key, weight) pairs and threshold for the "
"account. Refer to below *Multi Sig Account* for details."
msgstr ""

#: ../../docs/cli/key.rst:76
msgid "When the information of the account is like below,"
msgstr ""

#: ../../docs/cli/key.rst:79 ../../docs/cli/key.rst:104
msgid "threshold"
msgstr ""

#: ../../docs/cli/key.rst:79 ../../docs/cli/key.rst:104
msgid "100"
msgstr ""

#: ../../docs/cli/key.rst:81
msgid "{key: 21Sn1o…, weight: 50}, {key: utzCef…, weight: 50}"
msgstr ""

#: ../../docs/cli/key.rst:89
msgid ""
"**However, you can't get correct address if the keys of the account have "
"updated by key-updater command.** Refer to `key-updater <https"
"://protocon-general-doc.readthedocs.io/en/latest/docs/cli/seal.html#key-"
"updater>`_."
msgstr ""

#: ../../docs/cli/key.rst:92
msgid "Multi Sig Account"
msgstr ""

#: ../../docs/cli/key.rst:94
msgid ""
"Account is a data structure that has *currency* and *balance* in Mitum "
"Currency."
msgstr ""

#: ../../docs/cli/key.rst:95
msgid ""
"Account has a unique value called *address* and can be identified through"
" this."
msgstr ""

#: ../../docs/cli/key.rst:96
msgid "Register a public key for user’s *Account authentication*."
msgstr ""

#: ../../docs/cli/key.rst:97
msgid ""
"Mitum Currency accounts can register *multiple public keys* because "
"**multi signatures are possible**."
msgstr ""

#: ../../docs/cli/key.rst:99
msgid "For example, an account under following condition is available."
msgstr ""

#: ../../docs/cli/key.rst:102
msgid "HjyXhhuHAZBGaEw2S5cKZhDwqVc1StbkJMtdgGm3F1dnmca"
msgstr ""

#: ../../docs/cli/key.rst:106
msgid "{key: rd89Gx…, weight: 50}, {key: skRdC6…, weight: 50}"
msgstr ""

#: ../../docs/cli/key.rst:108 ../../docs/model/intro.rst:19
msgid "balance"
msgstr ""

#: ../../docs/cli/key.rst:108
msgid "{currency: MCC, amount: 10000}, {currency: MCC2, amount: 20000}"
msgstr ""

#: ../../docs/cli/key.rst:113
msgid "There are several conditions that each account should follow."
msgstr ""

#: ../../docs/cli/key.rst:115
msgid "The range of ``threshold`` should be 1 <= threshold <= 100."
msgstr ""

#: ../../docs/cli/key.rst:116
msgid "The range of each ``weight`` should be 1 <= weight <= 100."
msgstr ""

#: ../../docs/cli/key.rst:117
msgid ""
"The sum of every weight of the account should be greater than or equal to"
" ``threshold``."
msgstr ""

#: ../../docs/cli/key.rst:118
msgid "Each key must be a BTC compressed public key with suffix ``mpu``."
msgstr ""

#: ../../docs/cli/key.rst:119
msgid "``mca`` follows the address as a suffix."
msgstr ""

#: ../../docs/cli/key.rst:121
msgid "These are examples of available account states."
msgstr ""

#: ../../docs/cli/key.rst:123
msgid "CASE1 (single)"
msgstr ""

#: ../../docs/cli/key.rst:125 ../../docs/cli/key.rst:135
#: ../../docs/sdk/java.rst:579 ../../docs/sdk/js.rst:595
#: ../../docs/sdk/python.rst:553
msgid "threshold: 100"
msgstr ""

#: ../../docs/cli/key.rst:126
msgid "keys: {key: rd89Gx…, weight: 100}"
msgstr ""

#: ../../docs/cli/key.rst:128
msgid "CASE2 (single)"
msgstr ""

#: ../../docs/cli/key.rst:130 ../../docs/cli/key.rst:140
#: ../../docs/sdk/java.rst:429 ../../docs/sdk/js.rst:436
#: ../../docs/sdk/python.rst:413
msgid "threshold: 50"
msgstr ""

#: ../../docs/cli/key.rst:131
msgid "keys: {key: rd89Gx…, weight: 60}"
msgstr ""

#: ../../docs/cli/key.rst:133
msgid "CASE3 (multi)"
msgstr ""

#: ../../docs/cli/key.rst:136
msgid ""
"keys: {key: rd89Gx…, weight: 40}, {key: skRdC6…, weight: 30}, {key: "
"mymMwq…, weight: 30}"
msgstr ""

#: ../../docs/cli/key.rst:138
msgid "CASE4 (multi)"
msgstr ""

#: ../../docs/cli/key.rst:141
msgid ""
"keys: {key: rd89Gx…, weight: 20}, {key: skRdC6…, weight: 20}, {key: "
"mymMwq…, weight: 10}"
msgstr ""

#: ../../docs/cli/key.rst:143
msgid ""
"Even in the same publickey combination, address will have different "
"values if ``weight`` or ``threshold`` are different."
msgstr ""

#: ../../docs/cli/key.rst:147 ../../docs/cli/seal.rst:998
msgid "sign"
msgstr ""

#: ../../docs/cli/key.rst:149
msgid ""
"By ``sign`` command, get the signature of the private key for a specific "
"message."
msgstr ""

#: ../../docs/cli/key.rst:162
msgid "Note that signature base is string type encoded by *base64*."
msgstr ""

#: ../../docs/cli/lookup.rst:3
msgid "Lookup Account"
msgstr ""

#: ../../docs/cli/lookup.rst:7 ../../docs/run/intro.rst:30
msgid "Prerequisite"
msgstr ""

#: ../../docs/cli/lookup.rst:9
msgid "curl"
msgstr ""

#: ../../docs/cli/lookup.rst:11
msgid "This is a command line tool for interacting with API."
msgstr ""

#: ../../docs/cli/lookup.rst:12
msgid "https://curl.se"
msgstr ""

#: ../../docs/cli/lookup.rst:14
msgid "jq"
msgstr ""

#: ../../docs/cli/lookup.rst:16
msgid "This is a command line tool for parsing json response."
msgstr ""

#: ../../docs/cli/lookup.rst:17
msgid "https://stedolan.github.io/jq/"
msgstr ""

#: ../../docs/cli/lookup.rst:21
msgid "Genesis Account Lookup"
msgstr ""

#: ../../docs/cli/lookup.rst:23
msgid "You can lookup genesis account from local blockdata."
msgstr ""

#: ../../docs/cli/lookup.rst:47
msgid ""
"99999999999999999977 = 99999999999999999999 - (2 create account: 10 * 2) "
"- (2 fee: 1 * 2)"
msgstr ""

#: ../../docs/cli/lookup.rst:49
msgid "Also you can lookup genesis account from digest api."
msgstr ""

#: ../../docs/cli/lookup.rst:90
msgid ""
"When you lookup state by address from mongodb, remove the part after "
"``-`` of address and use it as key."
msgstr ""

#: ../../docs/cli/lookup.rst:92
msgid ""
"``FnuHC5HkFMpr4QABukchEeT63612gGKus3cRK3KAqK7Bmca`` → "
"``GkswusUGC22R5wmrXWB5yqFm8UN22yHLihZMkMb3z623-mca``"
msgstr ""

#: ../../docs/cli/node.rst:3
msgid "Node Command"
msgstr ""

#: ../../docs/cli/node.rst:5
msgid "``node`` command initializes node and runs node."
msgstr ""

#: ../../docs/cli/node.rst:7
msgid "The subcommands of the ``node`` command are as follows."
msgstr ""

#: ../../docs/cli/node.rst:9
msgid "``init``"
msgstr ""

#: ../../docs/cli/node.rst:10
msgid "``run``"
msgstr ""

#: ../../docs/cli/node.rst:11
msgid "``start-handover``"
msgstr ""

#: ../../docs/cli/node.rst:12
msgid "``info``"
msgstr ""

#: ../../docs/cli/node.rst:16
msgid "init"
msgstr ""

#: ../../docs/cli/node.rst:18
msgid ""
"By ``init`` command, **initialize the node** with the node design file "
"containing the node configuration."
msgstr ""

#: ../../docs/cli/node.rst:20
msgid ""
"See `node init <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/run/run.html#node-init>`_ for a "
"detailed explanation of ``init`` command."
msgstr ""

#: ../../docs/cli/node.rst:28
msgid "run"
msgstr ""

#: ../../docs/cli/node.rst:30
msgid ""
"By ``run`` command, **run the node** with the node design file containing"
" the node configuration."
msgstr ""

#: ../../docs/cli/node.rst:32
msgid ""
"See `node run <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/run/run.html#node-run>`_ for a detailed"
" explanation of ``run`` command."
msgstr ""

#: ../../docs/cli/node.rst:40
msgid "start-handover"
msgstr ""

#: ../../docs/cli/node.rst:42
msgid ""
"By ``start-handover`` command, **replace the running node** with another "
"node."
msgstr ""

#: ../../docs/cli/node.rst:44
msgid ""
"See `Node Handover <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/run/handover.html>`_ for a detailed "
"explanation of ``start-handover`` command."
msgstr ""

#: ../../docs/cli/node.rst:52
msgid "info"
msgstr ""

#: ../../docs/cli/node.rst:54
msgid ""
"By ``info`` command, **get the information of the remote node** with the "
"node's url."
msgstr ""

#: ../../docs/cli/seal.rst:3
msgid "Seal Command"
msgstr ""

#: ../../docs/cli/seal.rst:5
msgid "``seal`` command help execute various operations contained in the seal."
msgstr ""

#: ../../docs/cli/seal.rst:7
msgid "The subcommands related to **operation** are as follows."
msgstr ""

#: ../../docs/cli/seal.rst:9 ../../docs/model/currency.rst:50
msgid "``create-account``"
msgstr ""

#: ../../docs/cli/seal.rst:10 ../../docs/model/currency.rst:51
msgid "``transfer``"
msgstr ""

#: ../../docs/cli/seal.rst:11 ../../docs/model/currency.rst:52
msgid "``key-updater``"
msgstr ""

#: ../../docs/cli/seal.rst:12 ../../docs/model/currency.rst:53
msgid "``currency-register``"
msgstr ""

#: ../../docs/cli/seal.rst:13 ../../docs/model/currency.rst:54
msgid "``currency-policy-updater``"
msgstr ""

#: ../../docs/cli/seal.rst:14
msgid "``suffrage-inflation``"
msgstr ""

#: ../../docs/cli/seal.rst:16
msgid "``seal`` command also help create a signature and sends a seal."
msgstr ""

#: ../../docs/cli/seal.rst:18
msgid ""
"The subcommands related to **signature generation** and **transmission** "
"are as follows."
msgstr ""

#: ../../docs/cli/seal.rst:20
msgid "``send``"
msgstr ""

#: ../../docs/cli/seal.rst:22
msgid "``sign-fact``"
msgstr ""

#: ../../docs/cli/seal.rst:24
msgid ""
"Whether the operation is successfully processed can be checked through "
"the api."
msgstr ""

#: ../../docs/cli/seal.rst:26
msgid ""
"For more information, please refer to `Confirming the Success of the "
"Operation <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/api/builder.html#confirming-the-"
"success-of-the-operation>`_."
msgstr ""

#: ../../docs/cli/seal.rst:30 ../../docs/model/currency.rst:416
msgid "create-account"
msgstr ""

#: ../../docs/cli/seal.rst:32
msgid "By ``create-account`` command, create an account."
msgstr ""

#: ../../docs/cli/seal.rst:38 ../../docs/cli/seal.rst:469
msgid "KEY: <pub key, weight>"
msgstr ""

#: ../../docs/cli/seal.rst:42
msgid ""
"We will proceed with the process of creating two accounts, ``ac0`` and "
"``ac1`` as an example."
msgstr ""

#: ../../docs/cli/seal.rst:44
msgid ""
"For how to create a keypair, please refer to `Key Command <https"
"://protocon-general-doc.readthedocs.io/en/latest/docs/cli/key.html#>`_."
msgstr ""

#: ../../docs/cli/seal.rst:46
msgid "The operation that creates account ``ac0`` is as follows."
msgstr ""

#: ../../docs/cli/seal.rst:48
msgid "**Create Single Sig Account**"
msgstr ""

#: ../../docs/cli/seal.rst:50
msgid "Here is the account information that we will create."
msgstr ""

#: ../../docs/cli/seal.rst:129
msgid "The above json messages are put in the seal and sent to the node."
msgstr ""

#: ../../docs/cli/seal.rst:131
msgid "**Create Multi Sig Account**"
msgstr ""

#: ../../docs/cli/seal.rst:135
msgid ""
"In Mitum Currency, two or more operations signed by one account are not "
"processed in one block."
msgstr ""

#: ../../docs/cli/seal.rst:136
msgid ""
"For example, two respective operations that send 5 amount from ``ac0`` to"
" ``ac1`` and ``ac2`` cannot be processed at the same time."
msgstr ""

#: ../../docs/cli/seal.rst:137
msgid ""
"In this case, only the operation that arrived first is processed and the "
"rest are ignored."
msgstr ""

#: ../../docs/cli/seal.rst:139
msgid ""
"Suppose that the sender is trying to create ``ac0`` and ``ac1`` at the "
"same time by only one seal. Then the sender should include items for each"
" ``ac0`` and ``ac1``."
msgstr ""

#: ../../docs/cli/seal.rst:141
msgid ""
"That means, the sender creates and sends only one operation that creates "
"two account in the seal. It can be processed successfully. **Don't make "
"multiple separate operations which senders are same.**"
msgstr ""

#: ../../docs/cli/seal.rst:159 ../../docs/cli/seal.rst:617
#: ../../docs/cli/seal.rst:772 ../../docs/cli/seal.rst:881
msgid "Then,"
msgstr ""

#: ../../docs/cli/seal.rst:263
msgid ""
"Whether the operation block is saved can be checked through the "
"``fact.hash`` of operation inquiry in the digest API."
msgstr ""

#: ../../docs/cli/seal.rst:382 ../../docs/model/currency.rst:420
msgid "transfer"
msgstr ""

#: ../../docs/cli/seal.rst:384
msgid "By ``transfer`` command, transfer tokens between accounts."
msgstr ""

#: ../../docs/cli/seal.rst:392
msgid ""
"This is an example of transferring the currency 10 *MCC* tokens from "
"``ac0`` to ``ac1``."
msgstr ""

#: ../../docs/cli/seal.rst:450
msgid "If you want to send the operation to the network right away,"
msgstr ""

#: ../../docs/cli/seal.rst:459 ../../docs/model/currency.rst:418
msgid "key-updater"
msgstr ""

#: ../../docs/cli/seal.rst:461
msgid "By ``key-updater`` command, update the account keys."
msgstr ""

#: ../../docs/cli/seal.rst:463
msgid "Updating account keys to new public keys does not change address."
msgstr ""

#: ../../docs/cli/seal.rst:471
msgid ""
"For more information about account keys, refer to `Multi Sig Account "
"<https://protocon-general-doc.readthedocs.io/en/latest/docs/cli/key.html"
"#multi-sig-account>`_."
msgstr ""

#: ../../docs/cli/seal.rst:475
msgid ""
"This is an example of ``key-updater``. The example shows updating keys of"
" ``ac0`` to another one."
msgstr ""

#: ../../docs/cli/seal.rst:547
msgid "If you want to send the operation right away,"
msgstr ""

#: ../../docs/cli/seal.rst:556
msgid "Also, you can check whether the account keys have really changed."
msgstr ""

#: ../../docs/cli/seal.rst:578 ../../docs/model/currency.rst:406
msgid "currency-register"
msgstr ""

#: ../../docs/cli/seal.rst:580
msgid "By ``currency-register`` command, register a new currency token."
msgstr ""

#: ../../docs/cli/seal.rst:586
msgid ""
"When registering a new currency, the items that need to be set are as "
"follows."
msgstr ""

#: ../../docs/cli/seal.rst:588
msgid ""
"``genesis account``: account where the issued token will be registered "
"with new currency registration"
msgstr ""

#: ../../docs/cli/seal.rst:589
msgid "``genesis amount``: amount of newly issued tokens"
msgstr ""

#: ../../docs/cli/seal.rst:590
msgid "``–policy-new-account-min-balance=<amount>`` must be set."
msgstr ""

#: ../../docs/cli/seal.rst:591
msgid ""
"``feeer``: The feeer can be selected from three policies; {nil, fixed, "
"ratio}."
msgstr ""

#: ../../docs/cli/seal.rst:593
msgid "``nil`` is a case where there is no fee payment."
msgstr ""

#: ../../docs/cli/seal.rst:594
msgid "``fixed`` is a case where a fixed amount is paid."
msgstr ""

#: ../../docs/cli/seal.rst:595
msgid ""
"``ratio`` is a case where a payment is made in proportion to the "
"operation amount."
msgstr ""

#: ../../docs/cli/seal.rst:597
msgid ""
"If the fee policy is fixed, you must set ``–feeer-fixed-receiver=<fee "
"receiver account address>`` and ``–feeer-fixed-amount=<fee amount>`` "
"accordingly."
msgstr ""

#: ../../docs/cli/seal.rst:598
msgid ""
"If the fee policy is ratio, then ``–feeer-ratio-receiver=<fee receiver "
"account address>`` and ``–feeer-ratio-ratio=<fee ratio, multifly by "
"operation amount>``,`` –feeer-ratio-min=<minimum fee>``,`` –feeer-ratio-"
"max=<maximum fee>`` must be set."
msgstr ""

#: ../../docs/cli/seal.rst:600
msgid ""
"When registering a new currency, **the signature of the suffrage nodes "
"participating in consensus exceeds the consensus threshold (67%) to be "
"executed**."
msgstr ""

#: ../../docs/cli/seal.rst:604
msgid ""
"Suppose that we are going to register new currency *MCC2* following below"
" conditions."
msgstr ""

#: ../../docs/cli/seal.rst:642
msgid ""
"Each currency has a *zero account* for deposit only. The *zero account* "
"can be used to **burn tokens**. The *zero account* is an account that can"
" only deposit token because the public key is not registered."
msgstr ""

#: ../../docs/cli/seal.rst:644
msgid ""
"The address of *zero account* has the same format as ``<currency "
"id>-Xmca``. For example, the *zero account* address of PEN currency is "
"``PEN-Xmca``."
msgstr ""

#: ../../docs/cli/seal.rst:698 ../../docs/model/currency.rst:408
msgid "currency-policy-updater"
msgstr ""

#: ../../docs/cli/seal.rst:700
msgid ""
"By ``currency-policy-updater`` command, update the policy related to "
"currency."
msgstr ""

#: ../../docs/cli/seal.rst:706
msgid "First, get the info of the registered currency through API."
msgstr ""

#: ../../docs/cli/seal.rst:708
msgid ""
"When updating a currency policy, **the signature of the suffrage nodes "
"participating in consensus exceeds the consensus threshold (67%) to be "
"executed**."
msgstr ""

#: ../../docs/cli/seal.rst:752
msgid ""
"The policy that can be changed through ``currency-policy-updater`` is the"
" **fee-related policy** and the **minimum balance value** when creating a"
" new account."
msgstr ""

#: ../../docs/cli/seal.rst:756
msgid ""
"Suppose that we are going to update policy for *MCC2* following below "
"conditions."
msgstr ""

#: ../../docs/cli/seal.rst:797
msgid "Check,"
msgstr ""

#: ../../docs/cli/seal.rst:845
msgid "suffrage-inflation"
msgstr ""

#: ../../docs/cli/seal.rst:847
msgid ""
"By ``suffrage-inflation`` command, make inflation a existed currency "
"token."
msgstr ""

#: ../../docs/cli/seal.rst:853
msgid "``inflation item``: <receiver-account>,<currency-id>,<inflation-amount>"
msgstr ""

#: ../../docs/cli/seal.rst:855
msgid "There are two processes to register currency in Mitum Currency."
msgstr ""

#: ../../docs/cli/seal.rst:857
msgid "Through initial genesis currency creation"
msgstr ""

#: ../../docs/cli/seal.rst:858
msgid "By registering a new currency while the network is alive"
msgstr ""

#: ../../docs/cli/seal.rst:860
msgid ""
"The registered currency has a total supply amount. The Mitum Currency may"
" increase the amount of tokens in addition to the total supply amount."
msgstr ""

#: ../../docs/cli/seal.rst:862
msgid "When generate new amount, the items that need to be set are as follows."
msgstr ""

#: ../../docs/cli/seal.rst:864
msgid ""
"``receiver-account`` which receives account of additionally generated "
"tokens."
msgstr ""

#: ../../docs/cli/seal.rst:866
msgid ""
"When making inflation a currency, **the signature of the suffrage nodes "
"participating in consensus exceeds the consensus threshold (67%) to be "
"executed**."
msgstr ""

#: ../../docs/cli/seal.rst:870
msgid "We are going to make inflation ``MCC`` following below conditions."
msgstr ""

#: ../../docs/cli/seal.rst:907
msgid "send"
msgstr ""

#: ../../docs/cli/seal.rst:909
msgid "By ``send`` command, send a seal."
msgstr ""

#: ../../docs/cli/seal.rst:915
msgid ""
"Operations created in Mitum Currency are **transmitted in units of "
"seals**."
msgstr ""

#: ../../docs/cli/seal.rst:917
msgid ""
"Signature is required to transmit the seal. Refer to `Seal <https"
"://protocon-general-"
"doc.readthedocs.io/en/latest/docs/model/currency.html#seal>`_ for the "
"part related to the keypair used for signature creation."
msgstr ""

#: ../../docs/cli/seal.rst:921
msgid "``data.json`` is a seal file written in json."
msgstr ""

#: ../../docs/cli/seal.rst:988
msgid ""
"When sending to a local node for testing, an error may occur related to "
"tls authentication."
msgstr ""

#: ../../docs/cli/seal.rst:990
msgid "In this case, give the option ``–tls-insecure=true`` when sending seals."
msgstr ""

#: ../../docs/cli/seal.rst:1000
msgid "By ``sign`` command, create a signature for a seal."
msgstr ""

#: ../../docs/cli/seal.rst:1008
msgid ""
"Before use ``sign`` command, prepare a file, which content is a seal "
"including operations, saved in json format for signature generation."
msgstr ""

#: ../../docs/cli/seal.rst:1068
msgid "Run ``seal sign`` with this json file."
msgstr ""

#: ../../docs/cli/seal.rst:1070
msgid "Then you can get a seal with new seal signature such like,"
msgstr ""

#: ../../docs/cli/seal.rst:1132
msgid "sign-fact"
msgstr ""

#: ../../docs/cli/seal.rst:1134
msgid "By ``sign-fact`` command, create signature for operation facts."
msgstr ""

#: ../../docs/cli/seal.rst:1136
msgid ""
"This command is used to add a fact signature to the operation contained "
"in the seal. You must pass the seal data containing the operation to this"
" command."
msgstr ""

#: ../../docs/cli/seal.rst:1138
msgid ""
"The purpose of use is in the case of an operation created by an account "
"with multisig or when signing of multiple nodes is required such as "
"currency registration."
msgstr ""

#: ../../docs/cli/seal.rst:1146
msgid ""
"Here is the example s.t a seal contains a transfer operation for "
"transferring tokens from the multi sig account. It requires two fact "
"signatures, but has only one."
msgstr ""

#: ../../docs/cli/seal.rst:1193
msgid "After use ``sign-fact`` to add a fact signature, above json becomes,"
msgstr ""

#: ../../docs/cli/storage.rst:3
msgid "Storage Command"
msgstr ""

#: ../../docs/cli/storage.rst:5
msgid ""
"``storage`` command helps **download**, **verifie**, and **restore** "
"block data."
msgstr ""

#: ../../docs/cli/storage.rst:7
msgid "The subcommands related to ``storage`` command are as follows."
msgstr ""

#: ../../docs/cli/storage.rst:9
msgid "``download``"
msgstr ""

#: ../../docs/cli/storage.rst:10
msgid "``verify-blockdata``"
msgstr ""

#: ../../docs/cli/storage.rst:11
msgid "``verify-database``"
msgstr ""

#: ../../docs/cli/storage.rst:12
msgid "``clean``"
msgstr ""

#: ../../docs/cli/storage.rst:13
msgid "``clean-by-height``"
msgstr ""

#: ../../docs/cli/storage.rst:14
msgid "``restore``"
msgstr ""

#: ../../docs/cli/storage.rst:15
msgid "``set-blockdatamaps``"
msgstr ""

#: ../../docs/cli/storage.rst:19
msgid "download"
msgstr ""

#: ../../docs/cli/storage.rst:21
msgid "By ``download`` command, download block data of specific blockheight."
msgstr ""

#: ../../docs/cli/storage.rst:52
msgid "map"
msgstr ""

#: ../../docs/cli/storage.rst:54
msgid "By ``download map`` command, download blockdata map."
msgstr ""

#: ../../docs/cli/storage.rst:56 ../../docs/cli/storage.rst:264
msgid ""
"See `Block Data <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/model/currency.html#block-data>`_ for "
"details."
msgstr ""

#: ../../docs/cli/storage.rst:125
msgid "verify-blockdata"
msgstr ""

#: ../../docs/cli/storage.rst:127
msgid "By ``verify-blockdata`` command, verify blockdata in local storage."
msgstr ""

#: ../../docs/cli/storage.rst:164
msgid "verify-database"
msgstr ""

#: ../../docs/cli/storage.rst:166
msgid ""
"By ``verify-database`` command, the database is verified by comparing it "
"with the block data."
msgstr ""

#: ../../docs/cli/storage.rst:199
msgid "clean"
msgstr ""

#: ../../docs/cli/storage.rst:201
msgid "By ``clean`` command, clean blockdata and database."
msgstr ""

#: ../../docs/cli/storage.rst:215
msgid "clean-by-height"
msgstr ""

#: ../../docs/cli/storage.rst:217
msgid ""
"By ``clean-by-height`` command, clean blockdata and database above a "
"specific height."
msgstr ""

#: ../../docs/cli/storage.rst:231
msgid "restore"
msgstr ""

#: ../../docs/cli/storage.rst:233
msgid ""
"By ``restore`` command, restore the entire database from the downloaded "
"blockdata."
msgstr ""

#: ../../docs/cli/storage.rst:235
msgid ""
"When you use ``restore`` command, not only data for blockdata but also "
"data used for digest API are created. Check if the ``network id`` in the "
"settings of the yml file is the same as the ``network id`` of the "
"downloaded node."
msgstr ""

#: ../../docs/cli/storage.rst:237
msgid ""
"Multiple blockdata can be recovered simultaneously with the "
"``–concurrency`` option."
msgstr ""

#: ../../docs/cli/storage.rst:238
msgid ""
"If you want to delete and restore the existing mongodb data, use "
"``–clean``."
msgstr ""

#: ../../docs/cli/storage.rst:239
msgid "Use ``–dryrun`` to only check blockdata without actually recovering it."
msgstr ""

#: ../../docs/cli/storage.rst:240
msgid ""
"If you specify a specific blockdata directory with the ``–one`` option, "
"you can recover them one by one."
msgstr ""

#: ../../docs/cli/storage.rst:260
msgid "set-blockdatamaps"
msgstr ""

#: ../../docs/cli/storage.rst:262
msgid "By ``set-blockdatamaps`` command, update multiple BlockDataMaps."
msgstr ""

#: ../../docs/faq/common.rst:2 ../../docs/faq/models.rst:6
#: ../../docs/faq/utils.rst:5
msgid "Common"
msgstr ""

#: ../../docs/faq/mitum.rst:2
msgid "MITUM"
msgstr ""

#: ../../docs/faq/models.rst:2
msgid "Models"
msgstr ""

#: ../../docs/faq/models.rst:10 ../../docs/models/mitum-currency.rst:2
msgid "mitum-currency"
msgstr ""

#: ../../docs/faq/models.rst:15 ../../docs/models/mitum-data-blocksign.rst:2
msgid "mitum-data-blocksign"
msgstr ""

#: ../../docs/faq/utils.rst:2
msgid "Utils"
msgstr ""

#: ../../docs/faq/utils.rst:9 ../../docs/utils/mitum-js-util.rst:2
msgid "mitum-js-util"
msgstr ""

#: ../../docs/faq/utils.rst:13 ../../docs/utils/mitum-py-util.rst:2
msgid "mitum-py-util"
msgstr ""

#: ../../docs/faq/utils.rst:17 ../../docs/utils/mitum-java-util.rst:2
msgid "mitum-java-util"
msgstr ""

#: ../../docs/model/currency.rst:3 ../../docs/sdk/java.rst:9
#: ../../docs/sdk/js.rst:9 ../../docs/sdk/python.rst:9
msgid "Mitum Currency"
msgstr ""

#: ../../docs/model/currency.rst:7
msgid "What is Mitum Currency"
msgstr ""

#: ../../docs/model/currency.rst:9
msgid ""
"**Mitum Currency** is a currency model that operates on the **Mitum** "
"blockchain networks."
msgstr ""

#: ../../docs/model/currency.rst:10
msgid ""
"The Mitum model is a solution that can provide various services as an "
"extension layer that extends the Mitum main chain."
msgstr ""

#: ../../docs/model/currency.rst:11
msgid ""
"In Mitum Currency, flexible policy settings related to currency issuance "
"and operation are possible."
msgstr ""

#: ../../docs/model/currency.rst:12
msgid "Mitum Currency is implemented based on Mitum (blockchain core framework)."
msgstr ""

#: ../../docs/model/currency.rst:23
msgid "Feature of Mitum Currency"
msgstr ""

#: ../../docs/model/currency.rst:25
msgid ""
"Mitum Currency provides core features to meet the business needs of "
"various fields related to tokens."
msgstr ""

#: ../../docs/model/currency.rst:26
msgid ""
"*Multiple keys* can be registered when creating an account, and related "
"keys can be replaced through key update operation."
msgstr ""

#: ../../docs/model/currency.rst:27
msgid ""
"Mitum Currency can issue new currency and related policy can be "
"customized."
msgstr ""

#: ../../docs/model/currency.rst:28
msgid "Currency-related policy can be updated at any time as needed."
msgstr ""

#: ../../docs/model/currency.rst:29
msgid ""
"Mitum Currency has no compensation for block generation and there is also"
" no inflation."
msgstr ""

#: ../../docs/model/currency.rst:30
msgid ""
"The node configuration for the Mitum Currency network follows the node "
"operation policy of the Mitum blockchain, and details can be found at "
"`Build Multi Nodes Network <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/run/run.html#build-multi-nodes-"
"network>`_."
msgstr ""

#: ../../docs/model/currency.rst:34
msgid "Digest Service"
msgstr ""

#: ../../docs/model/currency.rst:36
msgid ""
"**Digest Service** is an internal service that stores block data stored "
"by Mitum separately to serve as *HTTP-based API*."
msgstr ""

#: ../../docs/model/currency.rst:37
msgid ""
"For more information on Digest Service, please refer to `REST API <https"
"://protocon-general-doc.readthedocs.io/en/latest/docs/api/intro.html>`_."
msgstr ""

#: ../../docs/model/currency.rst:41
msgid "Seal and Operation"
msgstr ""

#: ../../docs/model/currency.rst:44
msgid "Operation"
msgstr ""

#: ../../docs/model/currency.rst:46
msgid ""
"In the Mitum blockchain network, an operation is **a unit of command that"
" changes data**."
msgstr ""

#: ../../docs/model/currency.rst:48
msgid "Mitum Currency has operations of,"
msgstr ""

#: ../../docs/model/currency.rst:55
msgid "``suffrage-infration``"
msgstr ""

#: ../../docs/model/currency.rst:57
msgid ""
"Each operation requires a signature made with a private key according to "
"its contents."
msgstr ""

#: ../../docs/model/currency.rst:59
msgid ""
"The fact in the operation contains the contents to be executed, and the "
"hash value summarizing the body of the fact is also included."
msgstr ""

#: ../../docs/model/currency.rst:62
msgid "Fact and token"
msgstr ""

#: ../../docs/model/currency.rst:64
msgid ""
"Every operation contains a *fact*. In other words, **the content of the "
"operation is actually contained in the fact**."
msgstr ""

#: ../../docs/model/currency.rst:66
msgid "Facts play an important role in Mitum Currency."
msgstr ""

#: ../../docs/model/currency.rst:68
msgid "The fact hash is a value representing the processed operation."
msgstr ""

#: ../../docs/model/currency.rst:69
msgid "The fact hash must have a unique value in the blockchain."
msgstr ""

#: ../../docs/model/currency.rst:70
msgid ""
"So to check whether the operation is stored in the block, it can be "
"retrieved using the fact hash."
msgstr ""

#: ../../docs/model/currency.rst:72
msgid "In fact, the contents of the facts can be duplicated."
msgstr ""

#: ../../docs/model/currency.rst:82
msgid ""
"If so, does that mean that operations with the same fact content cannot "
"be duplicated?"
msgstr ""

#: ../../docs/model/currency.rst:84
msgid ""
"Don’t worry, in each fact, we use a value called *token* to make it "
"unique."
msgstr ""

#: ../../docs/model/currency.rst:85
msgid "The token is a value added to the essential contents of the operation."
msgstr ""

#: ../../docs/model/currency.rst:119
msgid ""
"A token is similar to a memo, but has the characteristic of making a fact"
" unique by **using a unique token value** for the same fact content."
msgstr ""

#: ../../docs/model/currency.rst:121
msgid ""
"Making the fact essential to every operation unique expands usability in "
"many ways."
msgstr ""

#: ../../docs/model/currency.rst:123
msgid ""
"The biggest advantage is that if you know exactly the contents of the "
"fact along with the token, you can simply check whether the operation is "
"processed or not."
msgstr ""

#: ../../docs/model/currency.rst:124
msgid ""
"Anyone can calculate the fact hash if they know the sender, receiver, "
"currencyID, amount, and a specific token value was used."
msgstr ""

#: ../../docs/model/currency.rst:125
msgid ""
"Therefore, anyone can inquire whether the corresponding operation has "
"been processed with the fact hash."
msgstr ""

#: ../../docs/model/currency.rst:127
msgid ""
"A *fact hash* is like a **public proof** recorded in a blockchain. If the"
" evidence disclosed in the blockchain is used well, various applications "
"can be made."
msgstr ""

#: ../../docs/model/currency.rst:128
msgid ""
"For example, even an outsider who does not have a direct account in the "
"blockchain can check the fact hash, which is the only value indicating "
"whether the operation is processed or not, and make the implementation "
"conditional on this."
msgstr ""

#: ../../docs/model/currency.rst:130
msgid ""
"In addition, facts and tokens can be usefully used in models that deal "
"with various data as well as remittance."
msgstr ""

#: ../../docs/model/currency.rst:133
msgid "Seal"
msgstr ""

#: ../../docs/model/currency.rst:135
msgid ""
"*Seal* is **a collection of operations** transmitted to the network. In "
"other words, the Operation is contained in the seal and transmitted."
msgstr ""

#: ../../docs/model/currency.rst:137
msgid "To transmit the seal, a signature made with a private key is required."
msgstr ""

#: ../../docs/model/currency.rst:138
msgid ""
"To create signature, you must use the private key created in Mitum’s "
"keypair package."
msgstr ""

#: ../../docs/model/currency.rst:139
msgid "Seal can contain up to 100 operations."
msgstr ""

#: ../../docs/model/currency.rst:141
msgid ""
"The private key used for the signature has nothing to do with the "
"blockchain account. In other words, it doesn’t have to be the private key"
" used by the account."
msgstr ""

#: ../../docs/model/currency.rst:144
msgid "Send"
msgstr ""

#: ../../docs/model/currency.rst:146
msgid "After creating an operation, the client creates and attaches a signature."
msgstr ""

#: ../../docs/model/currency.rst:148
msgid ""
"Create as many operations as necessary within the maximum number able to "
"be included in the seal, and put them in the seal."
msgstr ""

#: ../../docs/model/currency.rst:149
msgid "Create and put a signature on the seal."
msgstr ""

#: ../../docs/model/currency.rst:150
msgid "Send seal to Mitum node."
msgstr ""

#: ../../docs/model/currency.rst:153
msgid "Stored in Block"
msgstr ""

#: ../../docs/model/currency.rst:155
msgid ""
"The operation transmitted to the Blockchain network changes the state of "
"the account if it is normal and is finally saved in the block."
msgstr ""

#: ../../docs/model/currency.rst:156
msgid ""
"Whether the operation is confirmed and saved in the block can be checked "
"through `REST API <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/api/intro.html>`_."
msgstr ""

#: ../../docs/model/currency.rst:160
msgid "Block Data"
msgstr ""

#: ../../docs/model/currency.rst:163
msgid "Block data in Mitum Currency Node"
msgstr ""

#: ../../docs/model/currency.rst:165
msgid ""
"In the **Mitum Currency Node**, block data is stored in two spaces: "
"**Database** and **File System**."
msgstr ""

#: ../../docs/model/currency.rst:167
msgid ""
"The **database** stores the informations which are used for consensus, "
"such as,"
msgstr ""

#: ../../docs/model/currency.rst:181
msgid "The **file system** stores all block data, such as,"
msgstr ""

#: ../../docs/model/currency.rst:192
msgid ""
"Block data stored in the **database** is required to run the mitum "
"currency node and participate in the network normally."
msgstr ""

#: ../../docs/model/currency.rst:193
msgid ""
"Block data in the **file system** is not used at runtime, but is used to "
"provide block data to syncing nodes."
msgstr ""

#: ../../docs/model/currency.rst:195
msgid ""
"An intact node must support block data for other nodes which want to "
"synchronize block data."
msgstr ""

#: ../../docs/model/currency.rst:198
msgid "BlockDataMap"
msgstr ""

#: ../../docs/model/currency.rst:200
msgid "By default, block data is stored on the local file system."
msgstr ""

#: ../../docs/model/currency.rst:202
msgid ""
"*blockdatamap* contains the information about where the actual block data"
" is located."
msgstr ""

#: ../../docs/model/currency.rst:222
msgid ""
"In this BlockDataMap example, the data of ``operation_tree`` is located "
"at ``file:///000/000/000/000/000/000/002/2-operations_tree-"
"1f9877aebf8854fd42154c6e6479ff6a3e379b2762c65995c80f3dff2a357a26.jsonld.gz``"
msgstr ""

#: ../../docs/model/currency.rst:225
msgid "BlockDataMap for block data stored in external storage"
msgstr ""

#: ../../docs/model/currency.rst:227
msgid ""
"Mitum Currency supports storing block data in external storage rather "
"than the node’s local file system."
msgstr ""

#: ../../docs/model/currency.rst:229
msgid ""
"After going through some process to store block data externally, "
"*blockdatamap* becomes as follows."
msgstr ""

#: ../../docs/model/currency.rst:249
msgid "As you can see, the ``url`` is replaced with the external storage server."
msgstr ""

#: ../../docs/model/currency.rst:252
msgid "How to update BlockDataMap for external Storage"
msgstr ""

#: ../../docs/model/currency.rst:254
msgid ""
"For example, suppose that block data with a block height of 10 is moved "
"to an external storage."
msgstr ""

#: ../../docs/model/currency.rst:256
msgid "Here we will do this using the node’s *deploy key*."
msgstr ""

#: ../../docs/model/currency.rst:257
msgid ""
"This *deploy key* of the node is a key that can be used instead of the "
"private key of the node."
msgstr ""

#: ../../docs/model/currency.rst:259
msgid ""
"See ``deploy key`` command in `Deploy Command <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/cli/deploy.html>`_ for how to create a "
"deploy key."
msgstr ""

#: ../../docs/model/currency.rst:261
msgid ""
"The process of **moving block data** and **updating blockdatamap** is as "
"follows."
msgstr ""

#: ../../docs/model/currency.rst:263
msgid "Get the new *deploy key* of mitum currency node."
msgstr ""

#: ../../docs/model/currency.rst:264
msgid ""
"Download the current *blockdatamap* by using the ``storage download map``"
" command."
msgstr ""

#: ../../docs/model/currency.rst:265
msgid ""
"Upload all the block data files of height 10 to external storage(example "
": AWS S3)"
msgstr ""

#: ../../docs/model/currency.rst:266
msgid ""
"Update the ``url`` field value of the downloaded BlockDataMap with the "
"new url of external storage."
msgstr ""

#: ../../docs/model/currency.rst:267
msgid ""
"Update the node’s *blockdatamap* by running the ``storage set-"
"blockdatamaps`` command."
msgstr ""

#: ../../docs/model/currency.rst:268
msgid ""
"Check the newly updated *blockdatamap* with ``storage download map`` "
"command"
msgstr ""

#: ../../docs/model/currency.rst:270
msgid ""
"After updating blockdatamap successfully, mitum currency node will remove"
" all the files of height, 10 automatically after 30 minute."
msgstr ""

#: ../../docs/model/currency.rst:401 ../../docs/sdk/java.rst:258
#: ../../docs/sdk/js.rst:265 ../../docs/sdk/python.rst:249
msgid "Support Operations"
msgstr ""

#: ../../docs/model/currency.rst:404
msgid "Operations for Currency"
msgstr ""

#: ../../docs/model/currency.rst:406
msgid "Register new currency id"
msgstr ""

#: ../../docs/model/currency.rst:408
msgid "Update currency policy"
msgstr ""

#: ../../docs/model/currency.rst:410
msgid "suffrage-infration"
msgstr ""

#: ../../docs/model/currency.rst:410
msgid "Increase amount of tokens"
msgstr ""

#: ../../docs/model/currency.rst:414
msgid "Operations for Account"
msgstr ""

#: ../../docs/model/currency.rst:416
msgid "Create new account"
msgstr ""

#: ../../docs/model/currency.rst:418
msgid "Update account keys"
msgstr ""

#: ../../docs/model/currency.rst:420
msgid "Transfer amount of tokens"
msgstr ""

#: ../../docs/model/currency.rst:423
msgid ""
"Refer to `Seal Command <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/cli/seal.html>`_ to check how to create"
" those operations by commands."
msgstr ""

#: ../../docs/model/intro.rst:3
msgid "Blockchain Application Model"
msgstr ""

#: ../../docs/model/intro.rst:5
msgid ""
"*Mitum* is designed for general purpose blockchain. To fill this "
"requirement, **policy** and **data** of Mitum can be configurable and "
"manageable by practical way."
msgstr ""

#: ../../docs/model/intro.rst:7
msgid ""
"To make a long story short, network designers will design their network "
"in 2 parts:"
msgstr ""

#: ../../docs/model/intro.rst:9
msgid "Data"
msgstr ""

#: ../../docs/model/intro.rst:10
msgid "Policy"
msgstr ""

#: ../../docs/model/intro.rst:12
msgid ""
"By designing *data* and *policy*, designers can build and launch their "
"own model of network."
msgstr ""

#: ../../docs/model/intro.rst:14
msgid ""
"For example, suppose that a designer want to build currency model in "
"Mitum. He/She can define several currencies and relative data and add "
"additional policy."
msgstr ""

#: ../../docs/model/intro.rst:16
msgid "Data types:"
msgstr ""

#: ../../docs/model/intro.rst:18
msgid "account"
msgstr ""

#: ../../docs/model/intro.rst:21
msgid "Policy:"
msgstr ""

#: ../../docs/model/intro.rst:23
msgid "total amount"
msgstr ""

#: ../../docs/model/intro.rst:24
msgid "minimum amount of new balance"
msgstr ""

#: ../../docs/model/intro.rst:25
msgid "multisig"
msgstr ""

#: ../../docs/model/intro.rst:26
msgid "inflation"
msgstr ""

#: ../../docs/models/mitum-currency.rst:5
#: ../../docs/models/mitum-data-blocksign.rst:5
#: ../../docs/start/introduction.rst:2
msgid "Introduction"
msgstr ""

#: ../../docs/models/mitum-currency.rst:8
#: ../../docs/models/mitum-data-blocksign.rst:8
msgid "Document"
msgstr ""

#: ../../docs/models/mitum-currency.rst:11
#: ../../docs/models/mitum-data-blocksign.rst:11
msgid "API"
msgstr ""

#: ../../docs/run/config.rst:3
msgid "Configuration"
msgstr ""

#: ../../docs/run/config.rst:5
msgid "The configuration for node setting is written in *YAML*."
msgstr ""

#: ../../docs/run/config.rst:11
msgid "Address of local node(alias for url address)"
msgstr ""

#: ../../docs/run/config.rst:19
msgid "genesis-operations"
msgstr ""

#: ../../docs/run/config.rst:21
msgid ""
"``genesis-operation`` is a setting for the genesis operation that is "
"executed when the network is initialized."
msgstr ""

#: ../../docs/run/config.rst:22
msgid ""
"``genesis-operation`` contains the contents of the block that is "
"initially created."
msgstr ""

#: ../../docs/run/config.rst:24
msgid ""
"In the currency model, information on the main currency and genesis "
"account must be set."
msgstr ""

#: ../../docs/run/config.rst:26
msgid "It registers the information about,"
msgstr ""

#: ../../docs/run/config.rst:28
msgid "Keys of the *genesis account* (key, weight, threshold)"
msgstr ""

#: ../../docs/run/config.rst:29
msgid "Initial balance"
msgstr ""

#: ../../docs/run/config.rst:30
msgid "Currency ID"
msgstr ""

#: ../../docs/run/config.rst:31
msgid "Fee policy of the currency to be created"
msgstr ""

#: ../../docs/run/config.rst:51
msgid "network"
msgstr ""

#: ../../docs/run/config.rst:53
msgid ""
"Specify the *domain address* or *IP address* of the node used in the "
"network."
msgstr ""

#: ../../docs/run/config.rst:54
msgid ""
"Address to receive messages from node or client, using *quic* "
"communication protocol."
msgstr ""

#: ../../docs/run/config.rst:55
msgid ""
"*Self-signed certificates* can be used to set up test node. You can use "
"it for only test and development nodes where security is not a big "
"concern."
msgstr ""

#: ../../docs/run/config.rst:74
msgid "rate-limit"
msgstr ""

#: ../../docs/run/config.rst:76
msgid ""
"Basically, API interface of internet service allows to connect from "
"client without restriction."
msgstr ""

#: ../../docs/run/config.rst:77
msgid ""
"However, too many requests to service does harm to the performance of "
"service"
msgstr ""

#: ../../docs/run/config.rst:78
msgid ""
"To maintain the service to be stable, ``rate limit`` can be applied to "
"the API service."
msgstr ""

#: ../../docs/run/config.rst:80
msgid "See `Rate limiting <https://en.wikipedia.org/wiki/Rate_limiting>`_."
msgstr ""

#: ../../docs/run/config.rst:82
msgid ""
"Mitum supports *quic* based API service for communication within nodes, "
"even none-suffrages."
msgstr ""

#: ../../docs/run/config.rst:83
msgid ""
"Mitum Currency additionally supports *http2* based API service, called "
"digest."
msgstr ""

#: ../../docs/run/config.rst:85
msgid "``rate-limit`` applied to these API services."
msgstr ""

#: ../../docs/run/config.rst:107
msgid ""
"``cache``: cache for requests. At this time, supports “memory:” and "
"“redis://<redis server>”"
msgstr ""

#: ../../docs/run/config.rst:109
msgid "**memory**: memory cache"
msgstr ""

#: ../../docs/run/config.rst:110
msgid "**redis://<redis server>**: cached in redis server"
msgstr ""

#: ../../docs/run/config.rst:112
msgid "``preset``: pre defined rate limit settings."
msgstr ""

#: ../../docs/run/config.rst:114
msgid ""
"For Mitum, ``suffrage`` and ``world`` presets are already defined. See "
"`launch/config/ratelimit.go "
"<https://github.com/spikeekips/mitum/blob/master/launch/config/ratelimit.go>`_"
" in the source code."
msgstr ""

#: ../../docs/run/config.rst:115
msgid "You can make your own rate limit setting like bad-nodes."
msgstr ""

#: ../../docs/run/config.rst:117
msgid "Rules:"
msgstr ""

#: ../../docs/run/config.rst:119
msgid "**Rate-limit Settings** for a specific IP"
msgstr ""

#: ../../docs/run/config.rst:120
msgid ""
"Rules consist of *IP address* (or IP address range), ``preset`` and "
"detailed ``rate-limit`` settings."
msgstr ""

#: ../../docs/run/config.rst:121
msgid ""
"The IP address can be a single value or a range of IP addresses expressed"
" in *CIDR* notation. * example : 3.3.3.3, 4.4.4.4/24, 127.0.0.1/24"
msgstr ""

#: ../../docs/run/config.rst:123
msgid "Rate limit can be set through ``preset`` and additional ``limits``."
msgstr ""

#: ../../docs/run/config.rst:124
msgid ""
"``preset`` can be pre-defined preset like ``suffrage``, ``world`` or "
"user-defined preset like ``bad-nodes``."
msgstr ""

#: ../../docs/run/config.rst:125
msgid ""
"Additional limit such as ``blockdata: 5/m`` can be added to the "
"``preset``."
msgstr ""

#: ../../docs/run/config.rst:126
msgid ""
"Rules will be checked by the defined order. The upper rule will be "
"checked first."
msgstr ""

#: ../../docs/run/config.rst:128
msgid "Detailed limit:"
msgstr ""

#: ../../docs/run/config.rst:130
msgid ""
"The name of the API interface for Mitum, such as new-seal, used to set "
"the limit can be found in RateLimitHandleMap "
"(launch/config/ratelimit.go)."
msgstr ""

#: ../../docs/run/config.rst:131
msgid ""
"The name of the API interface for Mitum-currency can be found in "
"RateLimitHandlerMap (digest/handler.go)."
msgstr ""

#: ../../docs/run/config.rst:132
msgid ""
"new-seal: 3/2m means new-seal interface allows 3 requests per 2 minutes "
"to the specified IP or IP range."
msgstr ""

#: ../../docs/run/config.rst:133
msgid "See the manner of time duration."
msgstr ""

#: ../../docs/run/config.rst:135
msgid "Without any rules, by default no rate limit."
msgstr ""

#: ../../docs/run/config.rst:137
msgid "A limit value less than zero means unlimited."
msgstr ""

#: ../../docs/run/config.rst:147
msgid "The zero limit value means that the request is blocked."
msgstr ""

#: ../../docs/run/config.rst:159
msgid "network-id"
msgstr ""

#: ../../docs/run/config.rst:161
msgid "``network id`` acts like an identifier that **identifies a network**."
msgstr ""

#: ../../docs/run/config.rst:162
msgid "All nodes on the same network have the same ``network id`` value."
msgstr ""

#: ../../docs/run/config.rst:172
msgid "keypair"
msgstr ""

#: ../../docs/run/config.rst:174
msgid "Enter the **node's private key**."
msgstr ""

#: ../../docs/run/config.rst:182
msgid ""
"See `Key Command <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/cli/key.html>`_ to learn how to create "
"a key pair."
msgstr ""

#: ../../docs/run/config.rst:186
msgid "storage"
msgstr ""

#: ../../docs/run/config.rst:188
msgid ""
"Specify the *file system path* and *mongodb database address* of "
"blockchain data storage."
msgstr ""

#: ../../docs/run/config.rst:189
msgid ""
"If blockdata setting is missing, *blockdata > path* is set to a folder "
"called *blockdata* in the current path by default."
msgstr ""

#: ../../docs/run/config.rst:201
msgid "``port number`` should be same with that when running docker."
msgstr ""

#: ../../docs/run/config.rst:205
msgid "suffrage"
msgstr ""

#: ../../docs/run/config.rst:208 ../../docs/run/config.rst:256
msgid "nodes"
msgstr ""

#: ../../docs/run/config.rst:210
msgid "Set addresses for suffrage nodes participating in consensus."
msgstr ""

#: ../../docs/run/config.rst:212
msgid "The alias name of the local node is ``n0sas``."
msgstr ""

#: ../../docs/run/config.rst:213
msgid ""
"If ``n0``, ``n1``, ``n2``, ``n3`` nodes are included in the suffrage "
"nodes, it can be set as follows."
msgstr ""

#: ../../docs/run/config.rst:224
msgid ""
"If the ``n0`` node, which is a local node, is not included in the "
"suffrage nodes, the local node becomes a *None-suffrage* node and serves "
"only as a *syncing node*."
msgstr ""

#: ../../docs/run/config.rst:226
msgid ""
"The *Syncing node* does not participate in consensus and only syncs the "
"generated block data."
msgstr ""

#: ../../docs/run/config.rst:227
msgid "The *None-suffrage* node handles only the seal containing the operation."
msgstr ""

#: ../../docs/run/config.rst:228
msgid ""
"The *None-suffrage* node does not process ballots and proposals related "
"to voting between nodes."
msgstr ""

#: ../../docs/run/config.rst:229
msgid ""
"When the *None-suffrage* node stores the operation seal, it broadcasts "
"the seal to the suffrage nodes."
msgstr ""

#: ../../docs/run/config.rst:231
msgid ""
"If the *None-suffrage* node does not add other nodes to the suffrage "
"node, or does not configure other suffrage nodes, operation seal cannot "
"be processed."
msgstr ""

#: ../../docs/run/config.rst:243
msgid "sync-interval"
msgstr ""

#: ../../docs/run/config.rst:245
msgid "*None-suffrage* node periodically syncs block data."
msgstr ""

#: ../../docs/run/config.rst:247
msgid "The default interval is 10 seconds."
msgstr ""

#: ../../docs/run/config.rst:248
msgid "You can change the interval value through the ``sync-interval`` setting."
msgstr ""

#: ../../docs/run/config.rst:258
msgid ""
"Write the ``address`` (alias for the address), ``public key``, and "
"``url`` (ip address) of known nodes in the blockchain network."
msgstr ""

#: ../../docs/run/config.rst:260
msgid "If not written, it operates as a **standalone node**."
msgstr ""

#: ../../docs/run/config.rst:261
msgid ""
"If the node is a suffrage node and the node discovery function is used, "
"the ``url`` of the node is not required."
msgstr ""

#: ../../docs/run/config.rst:262
msgid ""
"However, if the node is not a suffrage node, the ``url``s of the suffrage"
" nodes must be included."
msgstr ""

#: ../../docs/run/config.rst:264
msgid "Mitum nodes use *CA signed certificate* (public certificate) by default."
msgstr ""

#: ../../docs/run/config.rst:266
msgid ""
"If certificate related settings are not made in *Network config*, the "
"node uses *self-signed certificate*."
msgstr ""

#: ../../docs/run/config.rst:267
msgid ""
"If other Mitum nodes use self-signed certificate, ``tls-insecure: true`` "
"should be set to all the nodes which use self-signed certificate."
msgstr ""

#: ../../docs/run/config.rst:304
msgid "digest"
msgstr ""

#: ../../docs/run/config.rst:306
msgid ""
"Specify the *mongodb address* that stores the data to be provided by the "
"*API* and the *IP address* of the API access."
msgstr ""

#: ../../docs/run/config.rst:319
msgid "tutorial.yml"
msgstr ""

#: ../../docs/run/config.rst:321
msgid "This is an example of **standalone** node configuration."
msgstr ""

#: ../../docs/run/handover.rst:3
msgid "Node Handover"
msgstr ""

#: ../../docs/run/handover.rst:5
msgid "Here we will explain the process of **node handover**."
msgstr ""

#: ../../docs/run/handover.rst:9
msgid "What is Handover?"
msgstr ""

#: ../../docs/run/handover.rst:11
msgid ""
"**Handover** is a feature that allows **a running node to be replaced "
"without stopping**."
msgstr ""

#: ../../docs/run/handover.rst:13
msgid ""
"Nodes participating in the consensus process in the entire network may "
"need to be replaced due to various circumstances."
msgstr ""

#: ../../docs/run/handover.rst:14
msgid ""
"There may be cases where the program running the node needs to be "
"updated, the node needs to be moved to another cloud service, or the node"
" fails. In such cases, you can replace an already running node with an "
"alternate node without stopping it."
msgstr ""

#: ../../docs/run/handover.rst:16
msgid ""
"Handover is one of the key features that can support public networks in "
"the future."
msgstr ""

#: ../../docs/run/handover.rst:20
msgid "Handover Scenario"
msgstr ""

#: ../../docs/run/handover.rst:22
msgid "**Node A**: the running node"
msgstr ""

#: ../../docs/run/handover.rst:23
msgid "**Node A-sub**: the node to be replaced"
msgstr ""

#: ../../docs/run/handover.rst:24
msgid ""
"Condition: *A-sub* must have the same configuration as *A*. However, the "
"value of ``network.url`` must be different."
msgstr ""

#: ../../docs/run/handover.rst:26
msgid "Node *A*'s Configuration"
msgstr ""

#: ../../docs/run/handover.rst:36
msgid "Node *A-sub*'s Configuration"
msgstr ""

#: ../../docs/run/handover.rst:48
msgid "How to Run"
msgstr ""

#: ../../docs/run/handover.rst:50
msgid "Under above scenario, it works along the following steps,"
msgstr ""

#: ../../docs/run/handover.rst:52
msgid "*A* is running as a suffrage node and wants to replace it with *A-sub*."
msgstr ""

#: ../../docs/run/handover.rst:53
msgid ""
"After confirming that *A* is in **CONSENSUS** state, run *A-sub* with "
"``node run`` command using the above config."
msgstr ""

#: ../../docs/run/handover.rst:54
msgid ""
"*A-sub* performs synchronization by collecting previous block data and "
"enters **SYNCING** state."
msgstr ""

#: ../../docs/run/handover.rst:56
msgid ""
"After confirming that the *A-sub* has changed to **SYNCING** state, "
"execute the ``start-handover`` command on *A-sub* node."
msgstr ""

#: ../../docs/run/handover.rst:66
msgid "When *B* finishes syncing, *Handover* starts."
msgstr ""

#: ../../docs/run/handover.rst:67
msgid ""
"*A* is switched from **CONSENSUS** state to **SYNCING** state, and "
"*A-sub* performs the consensus process on behalf of *A*."
msgstr ""

#: ../../docs/run/handover.rst:68
msgid ""
"Other nodes in the suffrage network add *A-sub* as a suffrage node "
"instead of *A* and proceed with the consensus process."
msgstr ""

#: ../../docs/run/handover.rst:69
msgid "Operation Seals delivered to *A* are delivered to other nodes."
msgstr ""

#: ../../docs/run/handover.rst:72
msgid "What If a start-handover is sent to A after the Handover is over?"
msgstr ""

#: ../../docs/run/handover.rst:74
msgid "*A* replaced by *A-sub* is converted to **SYNCING** state."
msgstr ""

#: ../../docs/run/handover.rst:75
msgid ""
"After the handover is finished, *A* is internally converted to the same "
"state as *A-sub* before the ``start-handover`` command."
msgstr ""

#: ../../docs/run/handover.rst:76
msgid ""
"If a ``start-handover`` command is delivered to *A* in this state, from "
"then on, *A* attempts to replace *A-sub*."
msgstr ""

#: ../../docs/run/handover.rst:79
msgid "How can I check that the start-handover is finished?"
msgstr ""

#: ../../docs/run/handover.rst:81
msgid "When checking *NodeInfo* of *A-sub*, it is changed to **CONSENSUS** state."
msgstr ""

#: ../../docs/run/handover.rst:82
msgid ""
"When *A*’s *NodeInfo* is checked, if it is changed to **SYNCING** state, "
"handover is normally completed."
msgstr ""

#: ../../docs/run/intro.rst:3 ../../docs/sdk/java.rst:18
#: ../../docs/sdk/js.rst:18 ../../docs/sdk/python.rst:18
msgid "Get Started"
msgstr ""

#: ../../docs/run/intro.rst:5
msgid "In this part, it will introduce how to run nodes on **Mitum Currency**."
msgstr ""

#: ../../docs/run/intro.rst:6
msgid "For using Mitum Currency, you need to install *docker* and *golang* first."
msgstr ""

#: ../../docs/run/intro.rst:8
msgid ""
"If you are looking for the usage of **Mitum Blocksign**, visit `mitum-"
"data-blocksign <https://github.com/ProtoconNet/mitum-data-blocksign>`_."
msgstr ""

#: ../../docs/run/intro.rst:12
msgid "About Mitum Currency Node"
msgstr ""

#: ../../docs/run/intro.rst:14
msgid ""
"**Mitum Blockchain** network running Mitum Currency uses **PBFT-based "
"ISAAC+ consensus protocol**."
msgstr ""

#: ../../docs/run/intro.rst:15
msgid ""
"In the *ISAAC+* consensus protocol, all nodes play the same role and "
"participate in block generation."
msgstr ""

#: ../../docs/run/intro.rst:17
msgid "Nodes participating in the network perform the following tasks."
msgstr ""

#: ../../docs/run/intro.rst:19
msgid "Make Proposal"
msgstr ""

#: ../../docs/run/intro.rst:20
msgid "Block Verification"
msgstr ""

#: ../../docs/run/intro.rst:21
msgid "Voting"
msgstr ""

#: ../../docs/run/intro.rst:22
msgid "Store Block"
msgstr ""

#: ../../docs/run/intro.rst:23
msgid "Provide Digest API Service"
msgstr ""

#: ../../docs/run/intro.rst:24
msgid "Transaction Request Collection"
msgstr ""

#: ../../docs/run/intro.rst:26
msgid ""
"For more information on the **Mitum Blockchain** network, refer to `Mitum"
" Document <https://mitum-doc.readthedocs.io/en/proto2/>`_."
msgstr ""

#: ../../docs/run/intro.rst:33
msgid "Database"
msgstr ""

#: ../../docs/run/intro.rst:35
msgid "**Mitum Currency** uses **MongoDB** as its main storage engine."
msgstr ""

#: ../../docs/run/intro.rst:37
msgid "To run the Mitum currency node, you need to prepare mongodb first."
msgstr ""

#: ../../docs/run/intro.rst:40
msgid "Installation and Setup"
msgstr ""

#: ../../docs/run/intro.rst:42
msgid ""
"`Manual Installation Guide "
"<https://docs.mongodb.com/manual/installation/>`_"
msgstr ""

#: ../../docs/run/intro.rst:44
msgid "Using `Docker Container <https://hub.docker.com/_/mongo>`_,"
msgstr ""

#: ../../docs/run/intro.rst:50
msgid ""
"About DB setup, refer to `Configuration <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/run/config.html>`_."
msgstr ""

#: ../../docs/run/intro.rst:53
msgid "Golang"
msgstr ""

#: ../../docs/run/intro.rst:55
msgid ""
"**Mitum Currency** is developed using the programming language `Go "
"<https://golang.org>`_."
msgstr ""

#: ../../docs/run/intro.rst:57
msgid "To create an executable binary, you need to build it from the source code."
msgstr ""

#: ../../docs/run/intro.rst:58
msgid ""
"We do not provide detailed instructions for installing the Go language "
"here."
msgstr ""

#: ../../docs/run/intro.rst:59
msgid ""
"You must have the Golang installed with at least version 1.16 to build "
"Mitum currency."
msgstr ""

#: ../../docs/run/intro.rst:61
msgid ""
"For more information, refer to `How to Install Go "
"<https://go.dev/doc/install>`_."
msgstr ""

#: ../../docs/run/intro.rst:65 ../../docs/sdk/java.rst:40
#: ../../docs/sdk/js.rst:38 ../../docs/sdk/python.rst:33
msgid "Installation"
msgstr ""

#: ../../docs/run/intro.rst:67
msgid ""
"Please download the source code of `Mitum Currency "
"<https://github.com/spikeekips/mitum-currency>`_."
msgstr ""

#: ../../docs/run/intro.rst:69 ../../docs/sdk/js.rst:52
#: ../../docs/sdk/python.rst:35
msgid "Using **Git**,"
msgstr ""

#: ../../docs/run/intro.rst:75
msgid "Build exe file."
msgstr ""

#: ../../docs/run/intro.rst:86
msgid ""
"To see all instructions of Mitum Currency, refer to `CLI <https"
"://protocon-general-doc.readthedocs.io/en/latest/docs/cli/intro.html>`_."
msgstr ""

#: ../../docs/run/run.rst:3
msgid "Run"
msgstr ""

#: ../../docs/run/run.rst:5
msgid "Here we will explain the process for running the node."
msgstr ""

#: ../../docs/run/run.rst:9
msgid ""
"A node can find out the addresses of all nodes by using the node "
"discovery protocol."
msgstr ""

#: ../../docs/run/run.rst:10
msgid ""
"*Digest API* is included in Mitum Currency, so API service is provided by"
" default."
msgstr ""

#: ../../docs/run/run.rst:11
msgid ""
"Please check `Configuration <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/run/config.html>`_ for Digest setting."
msgstr ""

#: ../../docs/run/run.rst:12
msgid "If Digest is not set, data for API service must be processed separately."
msgstr ""

#: ../../docs/run/run.rst:16
msgid "Running the Standalone Node"
msgstr ""

#: ../../docs/run/run.rst:18
msgid ""
"Before running a node, please prepare tutorial.yml by refering to "
"`Configuration <https://protocon-general-"
"doc.readthedocs.io/en/latest/docs/run/config.html>`_."
msgstr ""

#: ../../docs/run/run.rst:21
msgid "node init"
msgstr ""

#: ../../docs/run/run.rst:23
msgid ""
"First, the *genesis block* and *genesis account* must be created. The "
"main currency is issued through the creation of the *genesis block* and "
"stored in the balance of the *genesis account*."
msgstr ""

#: ../../docs/run/run.rst:25
msgid "tutorial.yml : config file"
msgstr ""

#: ../../docs/run/run.rst:42
msgid ""
"If already saved block data is found, an error ``environment already "
"exists: block=0`` occurs. To reset the error and ignore it, run it by "
"adding the ``--force`` option."
msgstr ""

#: ../../docs/run/run.rst:44
msgid "``$ ./mc --log-level info init ./tutorial.yml --force``"
msgstr ""

#: ../../docs/run/run.rst:47
msgid "node run"
msgstr ""

#: ../../docs/run/run.rst:49
msgid ""
"When the node is run, the blockchain’s storage status and consensus "
"participation status are changed to *SYNC*, *JOIN*, and *CONSENSUS* "
"modes, and block creation starts."
msgstr ""

#: ../../docs/run/run.rst:63
msgid ""
"If the node is a suffrage node, the addresses of other live suffrage "
"nodes can be found using the *Node discovery protocol*. The node "
"discovery feature is only supported when the node is a suffrage node."
msgstr ""

#: ../../docs/run/run.rst:65
msgid ""
"When the suffrage node starts up, it is possible to determine the network"
" information of all suffrage nodes without publish url information of all"
" suffrage nodes."
msgstr ""

#: ../../docs/run/run.rst:66
msgid ""
"For node discovery, a node must set the address of one or more suffrage "
"nodes it knows to a discovery url at startup."
msgstr ""

#: ../../docs/run/run.rst:68
msgid "To specify the discovery url, use the ``–discovery`` command line option."
msgstr ""

#: ../../docs/run/run.rst:74
msgid ""
"Even if a node does not set the discovery url by itself, if another "
"suffrage node designates this node as a discovery node, the publish url "
"of other nodes is known by the gossip protocol. If the nodes specified by"
" discovery are not running, it keeps trying until it succeeds."
msgstr ""

#: ../../docs/run/run.rst:75
msgid ""
"Again, node discovery only works with suffrage nodes. For nodes not "
"included in the suffrage node list, the urls of other suffrage nodes are "
"still specified in the node settings."
msgstr ""

#: ../../docs/run/run.rst:76
msgid ""
"If you set the log level to info, you can easily check the information of"
" the newly created block."
msgstr ""

#: ../../docs/run/run.rst:78
msgid "``–log`` command line option can collect logs to the specific files."
msgstr ""

#: ../../docs/run/run.rst:80
msgid ""
"Mitum dumps huge debugging log messages, including *quic* (http) request "
"message like this,"
msgstr ""

#: ../../docs/run/run.rst:86
msgid ""
"``–network-log`` command line option can collect these request messages "
"to the specific files."
msgstr ""

#: ../../docs/run/run.rst:97
msgid "Multiple file can be set to ``–network-log`` and ``–log``."
msgstr ""

#: ../../docs/run/run.rst:99
msgid ""
"In mitum Currency, ``–network-log`` option will also collect the requests"
" log from *digest API* (http2)"
msgstr ""

#: ../../docs/run/run.rst:100
msgid "``–network-log`` option is only available in ``node run`` command."
msgstr ""

#: ../../docs/run/run.rst:103
msgid "Lookup Genesis Account"
msgstr ""

#: ../../docs/run/run.rst:105
msgid ""
"You can check *genesis account* information through block files saved in "
"the file system."
msgstr ""

#: ../../docs/run/run.rst:138
msgid ""
"*height*, *address* of genesis account at ``0``, "
"``CoXPgSxcad3fRAbp2JBEeGcYGEQ7dQhdZGWXLbTHpwuGmca`` is saved in block."
msgstr ""

#: ../../docs/run/run.rst:141
msgid "Lookup using Digest API"
msgstr ""

#: ../../docs/run/run.rst:143
msgid "Account information can also be checked through *Digest API*."
msgstr ""

#: ../../docs/run/run.rst:145
msgid ""
"The api address according to the digest setting `Configuration <https"
"://protocon-general-doc.readthedocs.io/en/latest/docs/run/config.html>`_ "
"is https://localhost:54320."
msgstr ""

#: ../../docs/run/run.rst:147
msgid "Check genesis account through account information."
msgstr ""

#: ../../docs/run/run.rst:183
msgid "Build Multi Nodes Network"
msgstr ""

#: ../../docs/run/run.rst:186
msgid "Order of Execution"
msgstr ""

#: ../../docs/run/run.rst:188
msgid ""
"When executing a multi node, the first node that creates the *genesis "
"block* must be determined. The first node creates the *genesis block* "
"through the ``node init`` command. Nodes other than the one that creates "
"the *genesis block* do not need to execute the ``init`` command."
msgstr ""

#: ../../docs/run/run.rst:189
msgid ""
"The first node executes the node through the ``run`` command after "
"``init``."
msgstr ""

#: ../../docs/run/run.rst:190
msgid "Other nodes also execute each node through the ``run`` command."
msgstr ""

#: ../../docs/run/run.rst:191
msgid ""
"Other nodes follow the block of the first node through the *sync* "
"process, and the nodes create blocks through the *consensus* process."
msgstr ""

#: ../../docs/run/run.rst:193
msgid ""
"If there are 4 nodes and n0 node is the first node, the execution order "
"is as follows. If all four nodes are suffrage nodes, nodes must set at "
"least one other node *publish url* as the *discovery url* for node "
"discovery."
msgstr ""

#: ../../docs/run/run.rst:218
msgid ""
"If running in the same network, nodes should have the same value for the "
"next item in the configuration file."
msgstr ""

#: ../../docs/run/run.rst:220
msgid "``genesis-operations``"
msgstr ""

#: ../../docs/run/run.rst:221
msgid "``network-id``"
msgstr ""

#: ../../docs/run/run.rst:224
msgid "Four Suffrage Nodes"
msgstr ""

#: ../../docs/run/run.rst:226
msgid "Let's suppose we are in case of operating suffrage 4 nodes."
msgstr ""

#: ../../docs/run/run.rst:228
msgid "First, prepare **a separate yml configuration file for each node**."
msgstr ""

#: ../../docs/run/run.rst:229
msgid "``n0``, ``n1``, ``n2``, ``n3`` are all suffrage nodes."
msgstr ""

#: ../../docs/run/run.rst:237
msgid ""
"Depending on the configuration of the node, it is necessary to configure "
"the nodes participating in consensus."
msgstr ""

#: ../../docs/run/run.rst:264 ../../docs/run/run.rst:505
msgid ""
"The following one is an example of the full yml configuration for all "
"nodes."
msgstr ""

#: ../../docs/run/run.rst:445
msgid "Four Suffrage Nodes and One Sync Node"
msgstr ""

#: ../../docs/run/run.rst:447
msgid ""
"In case of operating four suffrage nodes and one sync node(non-suffrage "
"node),"
msgstr ""

#: ../../docs/run/run.rst:449
msgid "Prepare a separate yml configuration file for each node."
msgstr ""

#: ../../docs/run/run.rst:450
msgid ""
"``n0``, ``n1``, ``n2``, ``n3`` are suffrage nodes and ``n4`` is the sync "
"node."
msgstr ""

#: ../../docs/run/run.rst:459
msgid ""
"Only ``suffrage`` and ``nodes`` part of configuration of suffrage "
"nodes(n0, n1, n2, n3) are like,"
msgstr ""

#: ../../docs/run/run.rst:484
msgid ""
"Only ``suffrage`` and ``nodes`` part of configuration of sync node(n4) "
"are like,"
msgstr ""

#: ../../docs/run/run.rst:730
msgid "Node Discovery Scenario"
msgstr ""

#: ../../docs/run/run.rst:732
msgid "This is an example of a scenario for *Node Discovery*."
msgstr ""

#: ../../docs/sdk/java.rst:3
msgid "Java"
msgstr ""

#: ../../docs/sdk/java.rst:5
msgid "This is SDK written in Java."
msgstr ""

#: ../../docs/sdk/java.rst:7 ../../docs/sdk/js.rst:7
#: ../../docs/sdk/python.rst:7
msgid "Support models are,"
msgstr ""

#: ../../docs/sdk/java.rst:10 ../../docs/sdk/js.rst:10
#: ../../docs/sdk/python.rst:10
msgid "Mitum Blocksign"
msgstr ""

#: ../../docs/sdk/java.rst:12 ../../docs/sdk/js.rst:12
#: ../../docs/sdk/python.rst:12
msgid ""
"Note that this document introduces how to create operations only for "
"Mitum Currency."
msgstr ""

#: ../../docs/sdk/java.rst:14
msgid ""
"If you would like to check the way to create operations for Mitum "
"Blocksign and the detail explanation for Mitum Currency, please refer to "
"README of `mitum-java-util <https://github.com/ProtoconNet/mitum-java-"
"util>`_."
msgstr ""

#: ../../docs/sdk/java.rst:21 ../../docs/sdk/js.rst:21
#: ../../docs/sdk/python.rst:21
msgid "Prerequisite and Requirements"
msgstr ""

#: ../../docs/sdk/java.rst:23 ../../docs/sdk/python.rst:23
msgid "This package has been developed by,"
msgstr ""

#: ../../docs/sdk/java.rst:35
msgid "And this package is using this external Java Library."
msgstr ""

#: ../../docs/sdk/java.rst:37
msgid "`bitcoinj v0.14.7 <https://bitcoinj.org/>`_"
msgstr ""

#: ../../docs/sdk/java.rst:42
msgid ""
"`Download jar file <https://github.com/ProtoconNet/mitum-java-"
"util/tree/main/release>`_ from the repository."
msgstr ""

#: ../../docs/sdk/java.rst:44
msgid "Now, the latest version is ``mitum-java-util-1.3.0.jar``"
msgstr ""

#: ../../docs/sdk/java.rst:46
msgid "Using *Gradle*,"
msgstr ""

#: ../../docs/sdk/java.rst:54 ../../docs/sdk/js.rst:68
#: ../../docs/sdk/python.rst:53
msgid "Make Your First Operation"
msgstr ""

#: ../../docs/sdk/java.rst:56
msgid "This tutorial explains how to ``create-account`` by **mitum-java-util**."
msgstr ""

#: ../../docs/sdk/java.rst:58 ../../docs/sdk/js.rst:72
#: ../../docs/sdk/python.rst:57
msgid ""
"If you want to check how to create ``key-updater`` and ``transfer`` "
"operation, go **Support Operations** at the end of this section."
msgstr ""

#: ../../docs/sdk/java.rst:61 ../../docs/sdk/js.rst:75
#: ../../docs/sdk/python.rst:60
msgid "Get Available Account"
msgstr ""

#: ../../docs/sdk/java.rst:63 ../../docs/sdk/js.rst:77
#: ../../docs/sdk/python.rst:62
msgid "Before start, you must hold the account registered in the network."
msgstr ""

#: ../../docs/sdk/java.rst:65 ../../docs/sdk/js.rst:79
#: ../../docs/sdk/python.rst:64
msgid ""
"In Mitum Currency, only already existing account can create operations "
"able to be stored in block."
msgstr ""

#: ../../docs/sdk/java.rst:67 ../../docs/sdk/js.rst:81
#: ../../docs/sdk/python.rst:66
msgid "An account consists of following factor."
msgstr ""

#: ../../docs/sdk/java.rst:80 ../../docs/sdk/js.rst:94
#: ../../docs/sdk/python.rst:79
msgid ""
"If you haven't have any account yet, ask some other account to create "
"your account first."
msgstr ""

#: ../../docs/sdk/java.rst:81 ../../docs/sdk/js.rst:95
#: ../../docs/sdk/python.rst:80
msgid ""
"You can get keypairs for your account in **Details - Get Mitum Keypair** "
"section."
msgstr ""

#: ../../docs/sdk/java.rst:82 ../../docs/sdk/js.rst:96
#: ../../docs/sdk/python.rst:81
msgid ""
"Hand your (public key, weight) pairs and threshold to the account holder "
"who helps make your new account."
msgstr ""

#: ../../docs/sdk/java.rst:84 ../../docs/sdk/js.rst:98
#: ../../docs/sdk/python.rst:83
msgid ""
"For signing, private keys corresponding each public key of the account "
"must be remembered. **Don't let not allowed users to know your private "
"key!**"
msgstr ""

#: ../../docs/sdk/java.rst:85 ../../docs/sdk/js.rst:99
#: ../../docs/sdk/python.rst:84
msgid ""
"Of course, you must know your account address because you should use the "
"address as ``sender``."
msgstr ""

#: ../../docs/sdk/java.rst:87 ../../docs/sdk/js.rst:101
#: ../../docs/sdk/python.rst:86
msgid ""
"You are able to create operations with unauthorized account(like fake "
"keys and address) but those operations will be rejected after "
"broadcasting."
msgstr ""

#: ../../docs/sdk/java.rst:89 ../../docs/sdk/js.rst:103
#: ../../docs/sdk/python.rst:88
msgid "Now, go to next part to start to create your first operation!"
msgstr ""

#: ../../docs/sdk/java.rst:92 ../../docs/sdk/js.rst:106
#: ../../docs/sdk/python.rst:91
msgid "Create Generator"
msgstr ""

#: ../../docs/sdk/java.rst:94 ../../docs/sdk/js.rst:108
#: ../../docs/sdk/python.rst:93
msgid ""
"Most of elements and factors for an operation are created by "
"``Generator``."
msgstr ""

#: ../../docs/sdk/java.rst:95
msgid "For Mitum Currency, use ``Generator.currency()``."
msgstr ""

#: ../../docs/sdk/java.rst:97 ../../docs/sdk/js.rst:111
#: ../../docs/sdk/python.rst:96
msgid "When declare a ``Generator``, ``network id`` should be provided."
msgstr ""

#: ../../docs/sdk/java.rst:98 ../../docs/sdk/js.rst:112
#: ../../docs/sdk/python.rst:97
msgid "``network id`` is up to each network."
msgstr ""

#: ../../docs/sdk/java.rst:100 ../../docs/sdk/js.rst:114
#: ../../docs/sdk/python.rst:99
msgid "Let's suppose that the network id of the network is ``mitum``."
msgstr ""

#: ../../docs/sdk/java.rst:112 ../../docs/sdk/js.rst:124
#: ../../docs/sdk/python.rst:109
msgid ""
"For details about ``Generator``, go to **Details - Major Classes** and "
"refer to **Generator**."
msgstr ""

#: ../../docs/sdk/java.rst:114 ../../docs/sdk/js.rst:126
#: ../../docs/sdk/python.rst:111
msgid "In addition, you must have available account on the network."
msgstr ""

#: ../../docs/sdk/java.rst:116 ../../docs/sdk/js.rst:128
#: ../../docs/sdk/python.rst:113
msgid "Now, it's done to create operations."
msgstr ""

#: ../../docs/sdk/java.rst:119 ../../docs/sdk/js.rst:131
#: ../../docs/sdk/python.rst:116
msgid "Create Operation Item"
msgstr ""

#: ../../docs/sdk/java.rst:121 ../../docs/sdk/js.rst:133
#: ../../docs/sdk/python.rst:118
msgid ""
"Everything to do by an operation is contained in *operation fact*, not in"
" *operation*."
msgstr ""

#: ../../docs/sdk/java.rst:122 ../../docs/sdk/js.rst:134
#: ../../docs/sdk/python.rst:119
msgid "*Fact* have the basic information such that ``sender``, ``token``, etc..."
msgstr ""

#: ../../docs/sdk/java.rst:124 ../../docs/sdk/js.rst:136
#: ../../docs/sdk/python.rst:121
msgid "Actually, real constructions for the operation are contained in *Item*."
msgstr ""

#: ../../docs/sdk/java.rst:125 ../../docs/sdk/js.rst:137
#: ../../docs/sdk/python.rst:122
msgid "That means you must create items for the operation."
msgstr ""

#: ../../docs/sdk/java.rst:127 ../../docs/sdk/js.rst:139
#: ../../docs/sdk/python.rst:124
msgid ""
"Let's suppose that you want to create an account following below "
"conditions."
msgstr ""

#: ../../docs/sdk/java.rst:138 ../../docs/sdk/js.rst:150
#: ../../docs/sdk/python.rst:135
msgid ""
"Since the number of keys contained in the account is 2, new account will "
"be *multi-sig account*."
msgstr ""

#: ../../docs/sdk/java.rst:140 ../../docs/sdk/js.rst:152
#: ../../docs/sdk/python.rst:137
msgid "If every factor of new account have been decided, create an item!"
msgstr ""

#: ../../docs/sdk/java.rst:157
msgid ""
"First, create each key by ``Generator.currency().newKey(public key, "
"weight)``."
msgstr ""

#: ../../docs/sdk/java.rst:158
msgid ""
"Second, combine all keys with account threshold by "
"``Generator.currency().newKeys(key list, threshold)``."
msgstr ""

#: ../../docs/sdk/java.rst:159
msgid ""
"Third, create each amount by ``Generator.currency().newAmount(currencyId,"
" amount)``."
msgstr ""

#: ../../docs/sdk/java.rst:160
msgid ""
"Finally, create an item by "
"``Generator.currency().createCreateAccountsItem(keys, amount list)"
msgstr ""

#: ../../docs/sdk/java.rst:162 ../../docs/sdk/js.rst:173
#: ../../docs/sdk/python.rst:157
msgid "Of course you can customize the content of items by following constrains."
msgstr ""

#: ../../docs/sdk/java.rst:171 ../../docs/sdk/js.rst:182
#: ../../docs/sdk/python.rst:166
msgid "Create Operation Fact"
msgstr ""

#: ../../docs/sdk/java.rst:173 ../../docs/sdk/js.rst:184
#: ../../docs/sdk/python.rst:168
msgid ""
"*Fact* must have not empty ``items``, ``sender``, ``token``, and ``fact "
"hash``."
msgstr ""

#: ../../docs/sdk/java.rst:175 ../../docs/sdk/js.rst:186
#: ../../docs/sdk/python.rst:170
msgid ""
"Don't worry about ``token`` and ``fact hash`` because they will be filled"
" automatically by SDK."
msgstr ""

#: ../../docs/sdk/java.rst:176 ../../docs/sdk/js.rst:187
#: ../../docs/sdk/python.rst:171
msgid "The information you must provide is about ``items`` and ``sender``."
msgstr ""

#: ../../docs/sdk/java.rst:178 ../../docs/sdk/js.rst:189
#: ../../docs/sdk/python.rst:173
msgid "The way to create items has been introduced above section."
msgstr ""

#: ../../docs/sdk/java.rst:180 ../../docs/sdk/js.rst:191
#: ../../docs/sdk/python.rst:175
msgid ""
"Just be careful that only the account under below conditions can be used "
"as ``sender``."
msgstr ""

#: ../../docs/sdk/java.rst:188 ../../docs/sdk/js.rst:199
#: ../../docs/sdk/python.rst:183
msgid "Then, create *fact*!"
msgstr ""

#: ../../docs/sdk/java.rst:198
msgid ""
"If you want to create fact with multiple items, put them all in item list"
" as an array of ``Generator.currency().newCreateAccountsFact(sender's "
"address, item list)``"
msgstr ""

#: ../../docs/sdk/java.rst:201 ../../docs/sdk/js.rst:209
#: ../../docs/sdk/python.rst:193
msgid "Create Operation"
msgstr ""

#: ../../docs/sdk/java.rst:203 ../../docs/sdk/js.rst:211
#: ../../docs/sdk/python.rst:195
msgid "Finally, you are in the step to create operation!"
msgstr ""

#: ../../docs/sdk/java.rst:205 ../../docs/sdk/js.rst:213
#: ../../docs/sdk/python.rst:197
msgid ""
"Only thing you need to prepare is **sender's private key**. It is used "
"for signing fact."
msgstr ""

#: ../../docs/sdk/java.rst:206 ../../docs/sdk/js.rst:214
#: ../../docs/sdk/python.rst:198
msgid ""
"The signature of a private key is included to ``fact_signs`` as a **fact "
"signature**."
msgstr ""

#: ../../docs/sdk/java.rst:207 ../../docs/sdk/js.rst:215
#: ../../docs/sdk/python.rst:199
msgid ""
"The sum of weights of all signers in ``fact_signs`` should exceeds or be "
"equal to ``sender``'s threshold."
msgstr ""

#: ../../docs/sdk/java.rst:209 ../../docs/sdk/js.rst:217
#: ../../docs/sdk/python.rst:201
msgid ""
"**Only the signatures of sender account's keys are available to "
"fact_signs!**"
msgstr ""

#: ../../docs/sdk/java.rst:211 ../../docs/sdk/js.rst:219
#: ../../docs/sdk/python.rst:203
msgid ""
"There is ``memo`` in operation but it is not necessary. You can enter "
"something if you need, but be careful because that ``memo`` also affect "
"to ``operation hash``."
msgstr ""

#: ../../docs/sdk/java.rst:213 ../../docs/sdk/js.rst:221
#: ../../docs/sdk/python.rst:205
msgid ""
"In this example, supposed that ``sender`` is *single-sig account*. That "
"means, only one key exist in the sender's account."
msgstr ""

#: ../../docs/sdk/java.rst:214 ../../docs/sdk/js.rst:222
#: ../../docs/sdk/python.rst:206
msgid ""
"If ``sender`` is *multi-sig account*, you may add multiple signatures to "
"``fact_signs``."
msgstr ""

#: ../../docs/sdk/java.rst:215 ../../docs/sdk/js.rst:223
#: ../../docs/sdk/python.rst:207
msgid ""
"What key must sign is decided by the account's threshold and keys' "
"weights."
msgstr ""

#: ../../docs/sdk/java.rst:227
msgid ""
"Use just ``Generator.newOperation(fact, memo)`` for create operations, "
"not ``Generator.currency().newOperation(fact, memo)``."
msgstr ""

#: ../../docs/sdk/java.rst:229 ../../docs/sdk/js.rst:234
#: ../../docs/sdk/python.rst:218
msgid "Be sad, an operation can contain only one fact."
msgstr ""

#: ../../docs/sdk/java.rst:232 ../../docs/sdk/js.rst:237
#: ../../docs/sdk/python.rst:221
msgid "Create Seal"
msgstr ""

#: ../../docs/sdk/java.rst:234 ../../docs/sdk/js.rst:239
#: ../../docs/sdk/python.rst:223
msgid "In fact, ``operation`` itself is enough to create an account."
msgstr ""

#: ../../docs/sdk/java.rst:236 ../../docs/sdk/js.rst:241
#: ../../docs/sdk/python.rst:225
msgid "However, sometimes you may need to wrap multiple operations with a seal."
msgstr ""

#: ../../docs/sdk/java.rst:238 ../../docs/sdk/js.rst:243
#: ../../docs/sdk/python.rst:227
msgid "Mentioned above, one seal can contain multiple operations."
msgstr ""

#: ../../docs/sdk/java.rst:240 ../../docs/sdk/js.rst:245
#: ../../docs/sdk/python.rst:229
msgid ""
"The maximum of the number of operations in a seal is decided by the "
"policy of nodes."
msgstr ""

#: ../../docs/sdk/java.rst:241 ../../docs/sdk/js.rst:246
#: ../../docs/sdk/python.rst:230
msgid ""
"So check how many operations you can include in a seal before create "
"seals."
msgstr ""

#: ../../docs/sdk/java.rst:243
msgid "Anyway, it is simple to create a seal with **mitum-java-util**."
msgstr ""

#: ../../docs/sdk/java.rst:245 ../../docs/sdk/js.rst:250
#: ../../docs/sdk/python.rst:234
msgid ""
"What you have to prepare is *private key* from Mitum key package without "
"any conditions."
msgstr ""

#: ../../docs/sdk/java.rst:246 ../../docs/sdk/js.rst:251
#: ../../docs/sdk/python.rst:235
msgid "Any *btc compressed wif* with suffix *mpr* is okay."
msgstr ""

#: ../../docs/sdk/java.rst:253
msgid "Like ``newOperation``, use ``Generator.newSeal(signer, operation list)``."
msgstr ""

#: ../../docs/sdk/java.rst:255 ../../docs/sdk/js.rst:262
#: ../../docs/sdk/python.rst:246
msgid "Put all operations to wrap in *operation list*."
msgstr ""

#: ../../docs/sdk/java.rst:260 ../../docs/sdk/js.rst:267
#: ../../docs/sdk/python.rst:251
msgid "This section will introduce code example for each operation."
msgstr ""

#: ../../docs/sdk/java.rst:262
msgid "What Mitum Currency operations **mitum-java-util** supports are,"
msgstr ""

#: ../../docs/sdk/java.rst:264 ../../docs/sdk/java.rst:269
#: ../../docs/sdk/js.rst:271 ../../docs/sdk/js.rst:276
#: ../../docs/sdk/python.rst:255 ../../docs/sdk/python.rst:260
msgid "Create Account"
msgstr ""

#: ../../docs/sdk/java.rst:265 ../../docs/sdk/java.rst:308
#: ../../docs/sdk/js.rst:272 ../../docs/sdk/js.rst:317
#: ../../docs/sdk/python.rst:256 ../../docs/sdk/python.rst:296
msgid "Key Updater"
msgstr ""

#: ../../docs/sdk/java.rst:266 ../../docs/sdk/java.rst:359
#: ../../docs/sdk/js.rst:273 ../../docs/sdk/js.rst:366
#: ../../docs/sdk/python.rst:257 ../../docs/sdk/python.rst:344
msgid "Transfer"
msgstr ""

#: ../../docs/sdk/java.rst:271 ../../docs/sdk/js.rst:278
#: ../../docs/sdk/python.rst:262
msgid ""
"The tutorial for ``create-account`` have been already explained but it'll"
" be re-introduced in one code-block."
msgstr ""

#: ../../docs/sdk/java.rst:273 ../../docs/sdk/js.rst:280
#: ../../docs/sdk/python.rst:264
msgid "To create new account you have to prepare,"
msgstr ""

#: ../../docs/sdk/java.rst:275 ../../docs/sdk/js.rst:282
#: ../../docs/sdk/python.rst:266
msgid ""
"The information of new account: account keys as pairs of (public key, "
"weight), threshold, initial balance as pairs of (currency id, amount)"
msgstr ""

#: ../../docs/sdk/java.rst:276 ../../docs/sdk/js.rst:283
#: ../../docs/sdk/python.rst:267
msgid ""
"Sender's account that has existed already - especially sender's account "
"address and private keys."
msgstr ""

#: ../../docs/sdk/java.rst:278 ../../docs/sdk/js.rst:285
#: ../../docs/sdk/python.rst:269
msgid ""
"Mentioned before, what private keys must sign the fact is up to the "
"threshold and composition of weights."
msgstr ""

#: ../../docs/sdk/java.rst:305 ../../docs/sdk/js.rst:314
#: ../../docs/sdk/python.rst:293
msgid ""
"The detailed explanation was omitted. See at the start of 'Make Your "
"First Operation'."
msgstr ""

#: ../../docs/sdk/java.rst:310 ../../docs/sdk/js.rst:319
#: ../../docs/sdk/python.rst:298
msgid "This operation is literally to update keys of the account."
msgstr ""

#: ../../docs/sdk/java.rst:320 ../../docs/sdk/js.rst:329
#: ../../docs/sdk/python.rst:308
msgid ""
"*Can I change my account from single-sig to multi-sig? or from multi-sig "
"to single-sig?*"
msgstr ""

#: ../../docs/sdk/java.rst:322 ../../docs/sdk/js.rst:331
#: ../../docs/sdk/python.rst:310
msgid "Fortunately, of course, you can!"
msgstr ""

#: ../../docs/sdk/java.rst:324 ../../docs/sdk/js.rst:333
#: ../../docs/sdk/python.rst:312
msgid "To update keys of the account, you have to prepare,"
msgstr ""

#: ../../docs/sdk/java.rst:326 ../../docs/sdk/js.rst:335
#: ../../docs/sdk/python.rst:314
msgid ""
"The account(target) information you want to change the keys - account "
"address and private keys; what private keys are need is up to threshold "
"and key weights."
msgstr ""

#: ../../docs/sdk/java.rst:327 ../../docs/sdk/js.rst:336
#: ../../docs/sdk/python.rst:315
msgid "New keys: pairs of (public key, weights) and threshold"
msgstr ""

#: ../../docs/sdk/java.rst:328 ../../docs/sdk/js.rst:337
#: ../../docs/sdk/python.rst:316
msgid "Sufficient balance of a currency id to pay some fee."
msgstr ""

#: ../../docs/sdk/java.rst:330 ../../docs/sdk/js.rst:339
#: ../../docs/sdk/python.rst:318
msgid ""
"``create-account`` and ``transfer`` need ``item`` to create an operation "
"but ``key-updater`` don't need any item for it."
msgstr ""

#: ../../docs/sdk/java.rst:331 ../../docs/sdk/js.rst:340
#: ../../docs/sdk/python.rst:319
msgid "Just create *fact* right now."
msgstr ""

#: ../../docs/sdk/java.rst:355 ../../docs/sdk/js.rst:362
#: ../../docs/sdk/python.rst:340
msgid ""
"**After updating keys of the account, the keys used before becomes "
"useless. You should sign operation with private keys of new keypairs of "
"the account.**"
msgstr ""

#: ../../docs/sdk/java.rst:356 ../../docs/sdk/js.rst:363
#: ../../docs/sdk/python.rst:341
msgid ""
"**So record new private keys somewhere before send key-updater operation "
"to the network.**"
msgstr ""

#: ../../docs/sdk/java.rst:361 ../../docs/sdk/js.rst:368
#: ../../docs/sdk/python.rst:346
msgid "Finally, you can transfer your tokens to another account."
msgstr ""

#: ../../docs/sdk/java.rst:363 ../../docs/sdk/js.rst:370
#: ../../docs/sdk/python.rst:348
msgid "As other operations, you have to prepare,"
msgstr ""

#: ../../docs/sdk/java.rst:365 ../../docs/sdk/js.rst:372
#: ../../docs/sdk/python.rst:350
msgid "Sender's account information - account address, and private keys"
msgstr ""

#: ../../docs/sdk/java.rst:366 ../../docs/sdk/js.rst:373
#: ../../docs/sdk/python.rst:351
msgid "Pairs of (currency id, amount) to transfer"
msgstr ""

#: ../../docs/sdk/java.rst:368 ../../docs/sdk/js.rst:375
#: ../../docs/sdk/python.rst:353
msgid "Like ``create-account``, you must create *item* before making *fact*."
msgstr ""

#: ../../docs/sdk/java.rst:370 ../../docs/sdk/js.rst:377
#: ../../docs/sdk/python.rst:355
msgid ""
"Check whether you hold sufficient balance for each currency id to "
"transfer before sending operation."
msgstr ""

#: ../../docs/sdk/java.rst:372 ../../docs/sdk/js.rst:379
#: ../../docs/sdk/python.rst:357
msgid "Before start, suppose that you want to transfer,"
msgstr ""

#: ../../docs/sdk/java.rst:374 ../../docs/sdk/js.rst:381
#: ../../docs/sdk/python.rst:359
msgid "1000000 MCC token"
msgstr ""

#: ../../docs/sdk/java.rst:375 ../../docs/sdk/js.rst:382
#: ../../docs/sdk/python.rst:360
msgid "15000 PEN token"
msgstr ""

#: ../../docs/sdk/java.rst:377 ../../docs/sdk/js.rst:384
#: ../../docs/sdk/python.rst:362
msgid "And receiver is,"
msgstr ""

#: ../../docs/sdk/java.rst:379 ../../docs/sdk/js.rst:386
#: ../../docs/sdk/python.rst:364
msgid "CY1pkxsqQK6XMbnK4ssDNbDR2K7mitSwdS27DwBjd3Gcmca"
msgstr ""

#: ../../docs/sdk/java.rst:381 ../../docs/sdk/js.rst:388
#: ../../docs/sdk/python.rst:366
msgid ""
"Note that up to 10 (currency id, amount) pairs can be included in one "
"item."
msgstr ""

#: ../../docs/sdk/java.rst:382 ../../docs/sdk/js.rst:389
#: ../../docs/sdk/python.rst:367
msgid ""
"Moreover, up to 10 item can be included in one item. However, the "
"receiver for each item should be different."
msgstr ""

#: ../../docs/sdk/java.rst:406
msgid ""
"There are other operations that **mitum-java-util** supports, like "
"operations of *Mitum Blocksign*, but this document doesn't provide "
"examples of those operations."
msgstr ""

#: ../../docs/sdk/java.rst:407
msgid ""
"Refer to `README <https://github.com/ProtoconNet/mitum-java-"
"util/blob/main/README.md>`_ if necessary."
msgstr ""

#: ../../docs/sdk/java.rst:411 ../../docs/sdk/js.rst:418
#: ../../docs/sdk/python.rst:395
msgid "Sign"
msgstr ""

#: ../../docs/sdk/java.rst:413 ../../docs/sdk/js.rst:420
#: ../../docs/sdk/python.rst:397
msgid ""
"To allow an operation to store in blocks, whether signatures of the "
"operation satisfy the **condition** should be checked."
msgstr ""

#: ../../docs/sdk/java.rst:415 ../../docs/sdk/js.rst:422
#: ../../docs/sdk/python.rst:399
msgid "What you have to care about is,"
msgstr ""

#: ../../docs/sdk/java.rst:417 ../../docs/sdk/js.rst:424
#: ../../docs/sdk/python.rst:401
msgid "Is every signature is a signature signed by private key of the account?"
msgstr ""

#: ../../docs/sdk/java.rst:418 ../../docs/sdk/js.rst:425
#: ../../docs/sdk/python.rst:402
msgid ""
"Is the sum of every weight for each signer greater than or equal to the "
"account threshold?"
msgstr ""

#: ../../docs/sdk/java.rst:420 ../../docs/sdk/js.rst:427
#: ../../docs/sdk/python.rst:404
msgid ""
"Of course, there are other conditions each operation must satisfy but we "
"will focus on **signature** (especially about fact signature) in this "
"section."
msgstr ""

#: ../../docs/sdk/java.rst:422 ../../docs/sdk/js.rst:429
#: ../../docs/sdk/python.rst:406
msgid ""
"Let's suppose there is an multi-sig account with 3 keys s.t each weight "
"is 30 and threshold is 50."
msgstr ""

#: ../../docs/sdk/java.rst:424 ../../docs/sdk/js.rst:431
#: ../../docs/sdk/python.rst:408
msgid "That means,"
msgstr ""

#: ../../docs/sdk/java.rst:426 ../../docs/sdk/js.rst:433
#: ../../docs/sdk/python.rst:410
msgid "(pub1, 30)"
msgstr ""

#: ../../docs/sdk/java.rst:427 ../../docs/sdk/js.rst:434
#: ../../docs/sdk/python.rst:411
msgid "(pub2, 30)"
msgstr ""

#: ../../docs/sdk/java.rst:428 ../../docs/sdk/js.rst:435
#: ../../docs/sdk/python.rst:412
msgid "(pub3, 30)"
msgstr ""

#: ../../docs/sdk/java.rst:431 ../../docs/sdk/js.rst:438
#: ../../docs/sdk/python.rst:415
msgid ""
"When this account want to send an operation, the operation should include"
" at least two fact signatures of different signers."
msgstr ""

#: ../../docs/sdk/java.rst:433 ../../docs/sdk/js.rst:440
#: ../../docs/sdk/python.rst:417
msgid "CASE1: fact signatures signed by pub1's private key and pub2's private key"
msgstr ""

#: ../../docs/sdk/java.rst:435 ../../docs/sdk/js.rst:442
#: ../../docs/sdk/python.rst:419
msgid "the sum of pub1's weight and pub2's weight: 60"
msgstr ""

#: ../../docs/sdk/java.rst:436 ../../docs/sdk/java.rst:442
#: ../../docs/sdk/java.rst:448 ../../docs/sdk/js.rst:443
#: ../../docs/sdk/js.rst:449 ../../docs/sdk/js.rst:455
#: ../../docs/sdk/python.rst:420 ../../docs/sdk/python.rst:426
#: ../../docs/sdk/python.rst:432
msgid "the sum of weights = 60 > threshold = 50"
msgstr ""

#: ../../docs/sdk/java.rst:437 ../../docs/sdk/java.rst:443
#: ../../docs/sdk/java.rst:449 ../../docs/sdk/java.rst:455
#: ../../docs/sdk/js.rst:444 ../../docs/sdk/js.rst:450
#: ../../docs/sdk/js.rst:456 ../../docs/sdk/js.rst:462
#: ../../docs/sdk/python.rst:421 ../../docs/sdk/python.rst:427
#: ../../docs/sdk/python.rst:433 ../../docs/sdk/python.rst:439
msgid "So the operation with these two fact signatures is available"
msgstr ""

#: ../../docs/sdk/java.rst:439 ../../docs/sdk/js.rst:446
#: ../../docs/sdk/python.rst:423
msgid "CASE2: fact signatures signed by pub2's private key and pub3's private key"
msgstr ""

#: ../../docs/sdk/java.rst:441 ../../docs/sdk/js.rst:448
#: ../../docs/sdk/python.rst:425
msgid "the sum of pub2's weight and pub3's weight: 60"
msgstr ""

#: ../../docs/sdk/java.rst:445 ../../docs/sdk/js.rst:452
#: ../../docs/sdk/python.rst:429
msgid "CASE3: fact signatures signed by pub1's private key and pub3's private key"
msgstr ""

#: ../../docs/sdk/java.rst:447 ../../docs/sdk/js.rst:454
#: ../../docs/sdk/python.rst:431
msgid "the sum of pub1's weight and pub3's weight: 60"
msgstr ""

#: ../../docs/sdk/java.rst:451 ../../docs/sdk/js.rst:458
#: ../../docs/sdk/python.rst:435
msgid ""
"CASE4: fact signatures signed by pub1's private key, pub2's private key, "
"pub3's private key"
msgstr ""

#: ../../docs/sdk/java.rst:453 ../../docs/sdk/js.rst:460
#: ../../docs/sdk/python.rst:437
msgid "the sum of pub1's weight, pub2's weight and pub3's weight: 90"
msgstr ""

#: ../../docs/sdk/java.rst:454 ../../docs/sdk/js.rst:461
#: ../../docs/sdk/python.rst:438
msgid "the sum of weights = 90 > threshold = 50"
msgstr ""

#: ../../docs/sdk/java.rst:457 ../../docs/sdk/js.rst:464
msgid ""
"Therefore, you must add multiple signature to each operation to satisfy "
"the condition. (use ``Operation.addSign(private key)``)"
msgstr ""

#: ../../docs/sdk/java.rst:458 ../../docs/sdk/js.rst:465
#: ../../docs/sdk/python.rst:442
msgid ""
"Like **CASE4**, it's okay to sign with all private keys as long as the "
"sum of those weights >= threshold."
msgstr ""

#: ../../docs/sdk/java.rst:461 ../../docs/sdk/js.rst:468
#: ../../docs/sdk/python.rst:445
msgid "Add Fact Sign to Operation"
msgstr ""

#: ../../docs/sdk/java.rst:463 ../../docs/sdk/js.rst:470
#: ../../docs/sdk/python.rst:447
msgid ""
"Beside adding a fact signature when create the operation, there is "
"another way to add new fact signature to the operation."
msgstr ""

#: ../../docs/sdk/java.rst:465 ../../docs/sdk/js.rst:472
#: ../../docs/sdk/python.rst:449
msgid "To add new signature to the operation, you have to prepare,"
msgstr ""

#: ../../docs/sdk/java.rst:467 ../../docs/sdk/js.rst:474
#: ../../docs/sdk/python.rst:451
msgid "Private key to sign - it should be that of the sender of the operation."
msgstr ""

#: ../../docs/sdk/java.rst:468
msgid "Operation as JsonObject, or external JSON file."
msgstr ""

#: ../../docs/sdk/java.rst:469 ../../docs/sdk/js.rst:476
#: ../../docs/sdk/python.rst:453
msgid "Network ID"
msgstr ""

#: ../../docs/sdk/java.rst:471 ../../docs/sdk/js.rst:478
#: ../../docs/sdk/python.rst:455
msgid "First, create ``Signer`` with ``network id`` like ``Generator``."
msgstr ""

#: ../../docs/sdk/java.rst:484 ../../docs/sdk/js.rst:488
#: ../../docs/sdk/python.rst:465
msgid "Then, sign now!"
msgstr ""

#: ../../docs/sdk/java.rst:490
msgid ""
"Note that the result operation is not ``Operation`` object of **mitum-"
"java-util**. It's just a HashMap object."
msgstr ""

#: ../../docs/sdk/java.rst:491
msgid ""
"If you want to add multiple signature at once, you must create JsonObject"
" from HashMap then re-sign it with other private keys using ``Signer``."
msgstr ""

#: ../../docs/sdk/java.rst:495 ../../docs/sdk/js.rst:505
#: ../../docs/sdk/python.rst:476
msgid "Details"
msgstr ""

#: ../../docs/sdk/java.rst:498 ../../docs/sdk/js.rst:508
#: ../../docs/sdk/python.rst:479
msgid "Get Mitum Keypair"
msgstr ""

#: ../../docs/sdk/java.rst:500 ../../docs/sdk/js.rst:510
#: ../../docs/sdk/python.rst:481
msgid "We will introduce how to create Mitum keypairs!"
msgstr ""

#: ../../docs/sdk/java.rst:502 ../../docs/sdk/js.rst:512
#: ../../docs/sdk/python.rst:483
msgid ""
"Before start, we want to let you know something important; About type "
"suffix."
msgstr ""

#: ../../docs/sdk/java.rst:504 ../../docs/sdk/js.rst:514
#: ../../docs/sdk/python.rst:485
msgid ""
"*Address*, *private key*, and *public key* in Mitum have specific type "
"suffixes. They are,"
msgstr ""

#: ../../docs/sdk/java.rst:506 ../../docs/sdk/js.rst:516
#: ../../docs/sdk/python.rst:487
msgid "Account Address: ``mca``"
msgstr ""

#: ../../docs/sdk/java.rst:507 ../../docs/sdk/js.rst:517
#: ../../docs/sdk/python.rst:488
msgid "Private Key: ``mpr``"
msgstr ""

#: ../../docs/sdk/java.rst:508 ../../docs/sdk/js.rst:518
#: ../../docs/sdk/python.rst:489
msgid "Public Key: ``mpu``"
msgstr ""

#: ../../docs/sdk/java.rst:510 ../../docs/sdk/js.rst:520
#: ../../docs/sdk/python.rst:491
msgid "For example, an single-sig account looks like,"
msgstr ""

#: ../../docs/sdk/java.rst:512 ../../docs/sdk/js.rst:522
#: ../../docs/sdk/python.rst:493
msgid "Account Address: ``9XyYKpjad2MSPxR4wfQHvdWrZnk9f5s2zc9Rkdy2KT1gmca``"
msgstr ""

#: ../../docs/sdk/java.rst:513 ../../docs/sdk/js.rst:523
#: ../../docs/sdk/python.rst:494
msgid "Private Key: ``L11mKUECzKouwvXwh3eyECsCnvQx5REureuujGBjRuYXbMswFkMxmpr``"
msgstr ""

#: ../../docs/sdk/java.rst:514 ../../docs/sdk/js.rst:524
#: ../../docs/sdk/python.rst:495
msgid "Public Key: ``28Hhy6jwkEHx75bNLmG66RQu1LWiZ1vodwRTURtBJhtPWmpu``"
msgstr ""

#: ../../docs/sdk/java.rst:516 ../../docs/sdk/js.rst:526
#: ../../docs/sdk/python.rst:497
msgid "There are three methods to create a keypair."
msgstr ""

#: ../../docs/sdk/java.rst:519 ../../docs/sdk/js.rst:529
#: ../../docs/sdk/python.rst:500
msgid "Just Create New Keypair"
msgstr ""

#: ../../docs/sdk/java.rst:521
msgid "**mitum-java-util** will create random keypair for you!"
msgstr ""

#: ../../docs/sdk/java.rst:523
msgid "Use ``Keypar.create()``."
msgstr ""

#: ../../docs/sdk/java.rst:536 ../../docs/sdk/js.rst:548
#: ../../docs/sdk/python.rst:516
msgid "Get Keypair From Your Private Key"
msgstr ""

#: ../../docs/sdk/java.rst:538 ../../docs/sdk/js.rst:550
#: ../../docs/sdk/python.rst:518
msgid "If you already have own private key, create keypair with it!"
msgstr ""

#: ../../docs/sdk/java.rst:549 ../../docs/sdk/python.rst:528
msgid "Get Keypair From Your Seed"
msgstr ""

#: ../../docs/sdk/java.rst:551 ../../docs/sdk/js.rst:567
#: ../../docs/sdk/python.rst:530
msgid ""
"You can get keypair from your seed, too. Even if you don't remeber the "
"private key of the keypair, the keypair can be recovered by it's seed."
msgstr ""

#: ../../docs/sdk/java.rst:552 ../../docs/sdk/js.rst:568
#: ../../docs/sdk/python.rst:531
msgid "Note that string seed length >= 36."
msgstr ""

#: ../../docs/sdk/java.rst:567 ../../docs/sdk/js.rst:583
#: ../../docs/sdk/python.rst:541
msgid "Get Account Address with Keys"
msgstr ""

#: ../../docs/sdk/java.rst:569
msgid ""
"You can calculate address from threshold, and every (public key, weight) "
"pair of the account."
msgstr ""

#: ../../docs/sdk/java.rst:571 ../../docs/sdk/js.rst:587
#: ../../docs/sdk/python.rst:545
msgid ""
"However, it is not available to get address if keys or threshold of the "
"account have changed."
msgstr ""

#: ../../docs/sdk/java.rst:572 ../../docs/sdk/js.rst:588
#: ../../docs/sdk/python.rst:546
msgid "This method is available only for the account that have not changed yet."
msgstr ""

#: ../../docs/sdk/java.rst:574 ../../docs/sdk/js.rst:590
#: ../../docs/sdk/python.rst:548
msgid "The account information for the example is,"
msgstr ""

#: ../../docs/sdk/java.rst:576 ../../docs/sdk/js.rst:592
#: ../../docs/sdk/python.rst:550
msgid "key1: (vmk1iprMrs8V1NkA9DsSL3XQNnUW9SmFL5RCVJC24oFYmpu, 40)"
msgstr ""

#: ../../docs/sdk/java.rst:577 ../../docs/sdk/js.rst:593
#: ../../docs/sdk/python.rst:551
msgid "key2: (29BQ8gcVfJd5hPZCKj335WSe4cyDe7TGrjam7fTrkYNunmpu, 30)"
msgstr ""

#: ../../docs/sdk/java.rst:578 ../../docs/sdk/js.rst:594
#: ../../docs/sdk/python.rst:552
msgid "key3: (uJKiGLBeXF3BdaDMzKSqJ4g7L5kAukJJtW3uuMaP1NLumpu, 30)"
msgstr ""

#: ../../docs/sdk/java.rst:604 ../../docs/sdk/js.rst:612
#: ../../docs/sdk/python.rst:573
msgid "Major Classes"
msgstr ""

#: ../../docs/sdk/java.rst:607 ../../docs/sdk/js.rst:615
#: ../../docs/sdk/python.rst:576
msgid "Generator"
msgstr ""

#: ../../docs/sdk/java.rst:609 ../../docs/sdk/js.rst:617
#: ../../docs/sdk/python.rst:578
msgid ""
"``Generator`` is the class that helps generate operations for Mitum "
"Currency."
msgstr ""

#: ../../docs/sdk/java.rst:611 ../../docs/sdk/js.rst:619
#: ../../docs/sdk/python.rst:580
msgid "Before you use ``Generator``, ``network id`` must be set."
msgstr ""

#: ../../docs/sdk/java.rst:613
msgid "For **Mitum Currency**, use ``Generator.currency()``."
msgstr ""

#: ../../docs/sdk/java.rst:614
msgid "For **Mitum Blocksign**, use ``Generator.blockSign()``."
msgstr ""

#: ../../docs/sdk/java.rst:616
msgid ""
"For details of generating operations for **Mitum Blocksign**. refer to "
"`README <https://github.com/ProtoconNet/mitum-java-"
"util/blob/main/README.md>`_."
msgstr ""

#: ../../docs/sdk/java.rst:629 ../../docs/sdk/js.rst:636
#: ../../docs/sdk/python.rst:595
msgid "All methods of ``Generator`` provides are,"
msgstr ""

#: ../../docs/sdk/java.rst:660 ../../docs/sdk/js.rst:662
#: ../../docs/sdk/python.rst:621
msgid "Signer"
msgstr ""

#: ../../docs/sdk/java.rst:662 ../../docs/sdk/js.rst:664
#: ../../docs/sdk/python.rst:623
msgid ""
"``Signer`` is the class for adding new fact signature to already create "
"operations."
msgstr ""

#: ../../docs/sdk/java.rst:664 ../../docs/sdk/js.rst:666
#: ../../docs/sdk/python.rst:625
msgid "Like ``Generator``, ``network id`` must be set."
msgstr ""

#: ../../docs/sdk/java.rst:666 ../../docs/sdk/js.rst:668
#: ../../docs/sdk/python.rst:627
msgid "You have to prepare *private key* to sign, too."
msgstr ""

#: ../../docs/sdk/java.rst:668 ../../docs/sdk/js.rst:670
#: ../../docs/sdk/python.rst:629
msgid "``Signer`` provides only one method, that is,"
msgstr ""

#: ../../docs/sdk/java.rst:675 ../../docs/sdk/js.rst:676
#: ../../docs/sdk/python.rst:635
msgid ""
"To check the exact usage of ``Signer``, go back to **Make Your First "
"Operation - Sign**."
msgstr ""

#: ../../docs/sdk/java.rst:678 ../../docs/sdk/js.rst:679
#: ../../docs/sdk/python.rst:638
msgid "JSONParser"
msgstr ""

#: ../../docs/sdk/java.rst:680 ../../docs/sdk/js.rst:681
#: ../../docs/sdk/python.rst:640
msgid "This class is constructed just for convenience."
msgstr ""

#: ../../docs/sdk/java.rst:681
msgid ""
"If you would like to use other js package to export ``Operation`` to file"
" or to print it in JSON format, you don't need to use ``JSONParser`` of "
"**mitum-java-util**."
msgstr ""

#: ../../docs/sdk/js.rst:3
msgid "Javascript"
msgstr ""

#: ../../docs/sdk/js.rst:5
msgid "This is SDK written in Javascript."
msgstr ""

#: ../../docs/sdk/js.rst:14
msgid ""
"If you would like to check the way to create operations for Mitum "
"Blocksign and the detail explanation for Mitum Currency, please refer to "
"README of `mitum-js-util <https://github.com/ProtoconNet/mitum-js-"
"util>`_."
msgstr ""

#: ../../docs/sdk/js.rst:23
msgid ""
"To use **mitum-js-util** and build it, ``npm`` or ``yarn`` should be "
"installed."
msgstr ""

#: ../../docs/sdk/js.rst:25
msgid "Especially, this package has been developed by,"
msgstr ""

#: ../../docs/sdk/js.rst:35
msgid "``npm version 16.10.0 or later`` is recommended."
msgstr ""

#: ../../docs/sdk/js.rst:40
msgid "Using **npm**,"
msgstr ""

#: ../../docs/sdk/js.rst:46
msgid "Using **yarn**,"
msgstr ""

#: ../../docs/sdk/js.rst:70
msgid "This tutorial explains how to ``create-account`` by **mitum-js-util**."
msgstr ""

#: ../../docs/sdk/js.rst:109 ../../docs/sdk/python.rst:94
msgid "For Mitum Currency, use ``Generator.currency``."
msgstr ""

#: ../../docs/sdk/js.rst:167 ../../docs/sdk/python.rst:151
msgid "First, create each key by ``Generator.currency.key(public key, weight)``."
msgstr ""

#: ../../docs/sdk/js.rst:168 ../../docs/sdk/python.rst:152
msgid ""
"Second, combine all keys with account threshold by "
"``Generator.currency.createKeys(key list, threshold)``."
msgstr ""

#: ../../docs/sdk/js.rst:169 ../../docs/sdk/python.rst:153
msgid ""
"Third, create each amount by ``Generator.currency.amount(amount, "
"currencyId)``."
msgstr ""

#: ../../docs/sdk/js.rst:170 ../../docs/sdk/python.rst:154
msgid ""
"Forth, combine all amounts by ``Generator.currency.createAmounts(amount "
"list)``."
msgstr ""

#: ../../docs/sdk/js.rst:171 ../../docs/sdk/python.rst:155
msgid ""
"Finally, create an item by "
"``Generator.currency.createCreateAccountsItem(keys, amounts)"
msgstr ""

#: ../../docs/sdk/js.rst:206 ../../docs/sdk/python.rst:190
msgid ""
"If you want to create fact with multiple items, put them all in item list"
" as an array of ``Generator.currency.createCreateAccountsFact(sender's "
"address, item list)``"
msgstr ""

#: ../../docs/sdk/js.rst:232 ../../docs/sdk/python.rst:216
msgid ""
"Use just ``Generator.createOperation(fact, memo)`` for create operations,"
" not ``Generator.currency.createOperation(fact, memo)``."
msgstr ""

#: ../../docs/sdk/js.rst:248
msgid "Anyway, it is simple to create a seal with **mitum-js-util**."
msgstr ""

#: ../../docs/sdk/js.rst:260 ../../docs/sdk/python.rst:244
msgid ""
"Like ``createOperation``, use ``Generator.createSeal(signer, operation "
"list)``."
msgstr ""

#: ../../docs/sdk/js.rst:269
msgid "What Mitum Currency operations **mitum-js-util** supports are,"
msgstr ""

#: ../../docs/sdk/js.rst:413
msgid ""
"There are other operations that **mitum-js-util** supports, like "
"operations of *Mitum Blocksign*, but this document doesn't provide "
"examples of those operations."
msgstr ""

#: ../../docs/sdk/js.rst:414
msgid ""
"Refer to `README <https://github.com/ProtoconNet/mitum-js-"
"util/blob/master/README.md>`_ if necessary."
msgstr ""

#: ../../docs/sdk/js.rst:475 ../../docs/sdk/python.rst:452
msgid "Operation as JS dictionary object, or external JSON file."
msgstr ""

#: ../../docs/sdk/js.rst:498
msgid ""
"``signedFromPath`` and ``signedFromObject`` results in operation with "
"same fact signatures."
msgstr ""

#: ../../docs/sdk/js.rst:500
msgid ""
"Note that the result operation is not ``Operation`` object of **mitum-js-"
"util**. It's just a dictionary object."
msgstr ""

#: ../../docs/sdk/js.rst:501 ../../docs/sdk/python.rst:472
msgid ""
"If you want to add multiple signature at once, you must create another "
"different JSON file then re-sign it with other private keys using "
"``Signer``."
msgstr ""

#: ../../docs/sdk/js.rst:531
msgid "**mitum-js-util** will create random keypair for you!"
msgstr ""

#: ../../docs/sdk/js.rst:533 ../../docs/sdk/python.rst:504
msgid "Use ``getNewKeypair()``."
msgstr ""

#: ../../docs/sdk/js.rst:565
msgid "Get Keypair from your seed"
msgstr ""

#: ../../docs/sdk/js.rst:585 ../../docs/sdk/python.rst:543
msgid ""
"You can calcualte address from threshold, and every (public key, weight) "
"pair of the account."
msgstr ""

#: ../../docs/sdk/js.rst:621 ../../docs/sdk/python.rst:582
msgid "For **Mitum Currency**, use ``Generator.currency``."
msgstr ""

#: ../../docs/sdk/js.rst:622 ../../docs/sdk/python.rst:583
msgid "For **Mitum Blocksign**, use ``Generator.blockSign``."
msgstr ""

#: ../../docs/sdk/js.rst:624
msgid ""
"For details of generating operations for **Mitum Blocksign**. refer to "
"`README <https://github.com/ProtoconNet/mitum-js-"
"util/blob/master/README.md>`_."
msgstr ""

#: ../../docs/sdk/js.rst:682
msgid ""
"If you would like to use other js package to export ``Operation`` to file"
" or to print it in JSON format, you don't need to use ``JSONParser`` of "
"**mitum-js-util**."
msgstr ""

#: ../../docs/sdk/python.rst:3
msgid "Python"
msgstr ""

#: ../../docs/sdk/python.rst:5
msgid "This is SDK written in Python."
msgstr ""

#: ../../docs/sdk/python.rst:14
msgid ""
"If you would like to check the way to create operations for Mitum "
"Blocksign and the detail explanation for Mitum Currency, please refer to "
"README of `mitum-py-util <https://github.com/ProtoconNet/mitum-py-"
"util>`_."
msgstr ""

#: ../../docs/sdk/python.rst:30
msgid "``python 3.9 or later`` is recommended."
msgstr ""

#: ../../docs/sdk/python.rst:45
msgid ""
"If setup.py doesn't work properly, please just install necessary packages"
" with requirements.txt before running setup.py."
msgstr ""

#: ../../docs/sdk/python.rst:55
msgid "This tutorial explains how to ``create-account`` by **mitum-py-util**."
msgstr ""

#: ../../docs/sdk/python.rst:232
msgid "Anyway, it is simple to create a seal with **mitum-py-util**."
msgstr ""

#: ../../docs/sdk/python.rst:253
msgid "What Mitum Currency operations **mitum-py-util** supports are,"
msgstr ""

#: ../../docs/sdk/python.rst:390
msgid ""
"There are other operations that **mitum-py-util** supports, like "
"operations of *Mitum Blocksign*, but this document doesn't provide "
"examples of those operations."
msgstr ""

#: ../../docs/sdk/python.rst:391
msgid ""
"Refer to `README <https://github.com/ProtoconNet/mitum-py-"
"util/blob/master/README.md>`_ if necessary."
msgstr ""

#: ../../docs/sdk/python.rst:441
msgid ""
"Therefore, you must add multiple signature to each operation to satisfy "
"the condition. (use ``Operation.addFactSign(private key)``)"
msgstr ""

#: ../../docs/sdk/python.rst:471
msgid ""
"Note that the result operation is not ``Operation`` object of **mitum-py-"
"util**. It's just a dictionary object."
msgstr ""

#: ../../docs/sdk/python.rst:502
msgid "**mitum-py-util** will create random keypair for you!"
msgstr ""

#: ../../docs/sdk/python.rst:585
msgid ""
"For details of generating operations for **Mitum Blocksign**. refer to "
"`README <https://github.com/ProtoconNet/mitum-py-"
"util/blob/master/README.md>`_."
msgstr ""

#: ../../docs/sdk/python.rst:641
msgid ""
"If you would like to use other js package to export ``Operation`` to file"
" or to print it in JSON format, you don't need to use ``JSONParser`` of "
"**mitum-py-util**."
msgstr ""

#: ../../docs/start/about-mitum.rst:2
msgid "About MITUM"
msgstr ""

#: ../../docs/start/all-documents.rst:2
msgid "Documents"
msgstr ""

